+
lag(SP350, 0) + lag(kk, 0) + lag(nedarbas,
0) + lag(phope, 1) + lag(shope, 0) + lag(vhope, 0) + lag(gkl,
5) + lag(ip, 0) + lag(kursas, 0)
, data = data3)
ncvTest(modelis_po_aic)
summary(modelis_po_aic)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(kk, 0) + lag(nedarbas, 0) + lag(shope, 0) + lag(vhope, 0)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
summary(modelis_po_aic)
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(kk, 2) + lag(nedarbas, 2) + lag(shope, 2) + lag(vhope, 2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$mhope,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
mod_mhope = lm( mhope ~ lag(SP350,2)+ lag(kk,0) + lag(dll,0) + lag(nedarbas,0) + lag(infliacija,5) + lag(phope,0) + lag(pramhope,0) + lag(pramhope,13) + lag(shope,1) + lag(ul,0) + lag(vhope,1) + lag(vp,0) + lag(mp,11) + lag(gkl,10) + lag(ip,8) + lag(kursas,2), data=data3)
a<-stepAIC(mod_mhope)
mod_po_aic_mhope = lm(mhope ~ lag(SP350, 2) + lag(dll, 0) + lag(nedarbas, 0) + lag(pramhope,
0) + lag(pramhope, 13) + lag(ul, 0) + lag(vhope, 1) + lag(vp,
0) + lag(gkl, 10) + lag(ip, 8)
, data=data3)
ncvTest(mod_po_aic_mhope)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
summary(mod_po_aic_infliacija)
summary(mod_po_aic_mhope)
mod_mhope = lm( mhope ~ lag(SP350,2)+ lag(kk,0) + lag(dll,0) + lag(nedarbas,0) + lag(infliacija,5) + lag(phope,0) + lag(pramhope,13) + lag(shope,1) + lag(ul,0) + lag(vhope,1) + lag(vp,0) + lag(mp,11) + lag(gkl,10) + lag(ip,8) + lag(kursas,2), data=data3)
#ccf: dll - 0.370; shope - 0.350; ul - 0.420; vp - 0.694;
a<-stepAIC(mod_mhope)
ncvTest(mod_po_aic_mhope)
coeftest(mod_po_aic_mhope, vcov=vcovHC)
mod_mhope = lm( mhope ~ lag(SP350,2)+ lag(kk,0) + lag(dll,0) + lag(nedarbas,0) + lag(infliacija,5) + lag(phope,0) + lag(pramhope,13) + lag(shope,1) + lag(ul,0) + lag(vhope,1) + lag(vp,0) + lag(mp,11) + lag(gkl,10) + lag(ip,8) + lag(kursas,2), data=data3)
#ccf: dll - 0.370; shope - 0.350; ul - 0.420; vp - 0.694;
a<-stepAIC(mod_mhope)
mod_po_aic_mhope = lm(mhope ~ lag(SP350, 2) + lag(nedarbas, 0) + lag(pramhope, 13) + lag(ul, 0) + lag(vhope, 1) + lag(vp, 0) + lag(gkl, 10) + lag(ip, 8) , data=data3)
ncvTest(mod_po_aic_mhope)
summary(mod_po_aic_mhope)
coeftest(mod_po_aic_mhope, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(nedarbas, 0) + lag(pramhope, 13) + lag(vhope, 1) + lag(vp, 0)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(nedarbas, 3) + lag(pramhope, 16) + lag(vhope, 4) + lag(vp, 3)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(nedarbas, 3) + lag(pramhope, 16) + lag(vhope, 4) + lag(vp, 3) # +3 lago, nes mhope lag(3)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shope","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$ul,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
mod_ul = lm( ul ~ lag(SP350,4)+ lag(kk,0) + lag(dll,0) + lag(nedarbas,0) +lag(infliacija,7)+ lag(mhope,0) + lag(phope,1) + lag(pramhope,1) + lag(shope,1) + lag(vhope,1) + lag(vp,9) + lag(mp,11) + lag(gkl,10) + lag(ip,4)  + lag(kursas,2) + lag(kursas,14), data=data3)
# ccf: dll - 0.446;  mhope - 0.420; shope - 0.337;
stepAIC(mod_infliacija)
mod_ul = lm( ul ~ lag(SP350,4)+ lag(kk,0) + lag(dll,0) + lag(nedarbas,0) +lag(infliacija,7)+ lag(mhope,0) + lag(phope,1) + lag(pramhope,1) + lag(shope,1) + lag(vhope,1) + lag(vp,9) + lag(mp,11) + lag(gkl,10) + lag(ip,4)  + lag(kursas,2) + lag(kursas,14), data=data3)
# ccf: dll - 0.446;  mhope - 0.420; shope - 0.337;
stepAIC(mod_ul)
mod_ul = lm( ul ~ lag(SP350,4)+ lag(kk,0) + lag(dll,0) + lag(nedarbas,0) +lag(infliacija,7)+ lag(mhope,0) + lag(phope,1) + lag(pramhope,1) + lag(shope,1) + lag(vhope,1) + lag(vp,9) + lag(mp,11) + lag(gkl,10) + lag(ip,4)  + lag(kursas,2) + lag(kursas,14), data=data3)
# ccf: dll - 0.446;  mhope - 0.420; shope - 0.337;
stepAIC(mod_ul)
mod_po_aic_ul = lm(ul ~ lag(dll, 0) + lag(mhope, 0) + lag(phope, 1) + lag(pramhope, 1) + lag(vp, 9) + lag(mp, 11) + lag(ip, 4) + lag(kursas, 14), data=data3)
ncvTest(mod_po_aic_ul)
coeftest(mod_po_aic_ul, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(dll, 0) + lag(pramhope, 1) + lag(vp, 9) + lag(mp, 11) # +10 lago, nes ul lag(10)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
summary(modelis_po_aic)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(dll, 10) + lag(pramhope, 11) + lag(vp, 19) + lag(mp, 21) # +10 lago, nes ul lag(10)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shope","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$gkl,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
# KORELIACIJA:
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shope","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$ip,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
mod_ip = lm( ip ~ lag(SP350,0)+ lag(kk,0) + lag(dll,1) + lag(nedarbas,1) +lag(infliacija,6)+ lag(mhope,6) + lag(phope,8) + lag(pramhope,8) + lag(shope,6) + lag(ul,4) + lag(vhope,5) + lag(vhope,9) + lag(vp,6) + lag(mp,0) + lag(gkl,9) + lag(kursas,0) + lag(kursas,15), data=data3)
# ccf: kk - 0.750;
stepAIC(mod_ip)
mod_po_aic_ip = lm(ip ~ lag(kk, 0) + lag(nedarbas, 1) + lag(infliacija, 6) + lag(phope, 8) + lag(shope, 6) + lag(ul, 4) + lag(vhope, 5) + lag(vp, 6) + lag(gkl, 9) + lag(kursas, 15), data=data3)
ncvTest(mod_po_aic_ip)
summary(mod_po_aic_ip)
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$ip,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
mod_ip = lm( ip ~ lag(SP350,0)+ lag(kk,0) + lag(dll,1) + lag(nedarbas,1) +lag(infliacija,4)+ lag(mhope,6) + lag(phope,8) + lag(pramhope,8) + lag(shope,6) + lag(ul,4) + lag(vhope,5) + lag(vhope,9) + lag(vp,6) + lag(mp,0) + lag(gkl,9) + lag(kursas,0) + lag(kursas,15), data=data3)
# ccf: kk - 0.750;
stepAIC(mod_ip)
mod_po_aic_ip = lm(ip ~ lag(kk, 0) + lag(nedarbas, 1) + lag(infliacija, 4) + lag(phope,
8) + lag(shope, 6) + lag(ul, 4) + lag(vhope, 5) + lag(vp,
6) + lag(gkl, 9) + lag(kursas, 15), data=data3)
ncvTest(mod_po_aic_ip)
summary(mod_po_aic_ip)
mod_po_aic_ip = lm(ip ~ lag(kk, 0) + lag(nedarbas, 1) + lag(infliacija, 0) + lag(phope,
8) + lag(shope, 6) + lag(ul, 4) + lag(vhope, 5) + lag(vp,
6) + lag(gkl, 9) + lag(kursas, 15), data=data3)
ncvTest(mod_po_aic_ip)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(mod_po_aic_ip, vcov=vcovHC)
summary(mod_po_aic_ip)
mod_ip = lm( ip ~ lag(SP350,0)+ lag(kk,0) + lag(dll,1) + lag(nedarbas,1) +lag(infliacija,0)+ lag(mhope,6) + lag(phope,8) + lag(pramhope,8) + lag(shope,6) + lag(ul,4) + lag(vhope,5) + lag(vhope,9) + lag(vp,6) + lag(mp,0) + lag(gkl,9) + lag(kursas,0) + lag(kursas,15), data=data3)
# ccf: kk - 0.750;
stepAIC(mod_ip)
mod_po_aic_ip = lm(ip ~ lag(kk, 0) + lag(nedarbas, 1) + lag(infliacija, 0) + lag(phope, 8) + lag(shope, 6) + lag(ul, 4) + lag(vp, 6) + lag(kursas, 15), data=data3)
ncvTest(mod_po_aic_ip)
summary(mod_po_aic_ip)
coeftest(mod_po_aic_ip, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(kk, 4) + lag(nedarbas, 5) + lag(shope, 10) + lag(vp, 10) # +4 lago, nes ip lag(4)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shope","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$kursas,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$kursas,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
mod_ip = lm( kursas ~ lag(SP350,0)+ lag(kk,12) + lag(dll,4) + lag(nedarbas,8) +lag(infliacija,5)+ lag(mhope,8) + lag(phope,2) + lag(pramhope,1) + lag(shope,11) + lag(ul,4) + lag(vhope,5) + lag(vp,0) + lag(mp,0) + lag(gkl,12) + lag(ip,2), data=data3)
# ccf: SP350 - 0.597;
stepAIC(mod_ip)
mod_po_aic_ip = lm(kursas ~ lag(SP350, 0) + lag(kk, 12) + lag(nedarbas,
8) + lag(infliacija, 5) + lag(mhope, 8) + lag(shope, 11) +
lag(ul, 4) + lag(gkl, 12) + lag(ip, 2), data=data3)
ncvTest(mod_po_aic_ip)
summary(mod_po_aic_ip)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(kk, 14) + lag(nedarbas, 10) + lag(shope, 13) # +2 lago, nes kursas lag(2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shope","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$kursas,data3[,i]) #aiskinames laga
print(names2[i-2])
ccfvalues <- ccf(data3$gkl,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shope","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$gkl,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$gkl,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$gkl,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
}
mod_gkl = lm( gkl ~ lag(SP350,0)+ lag(kk,10) + lag(dll,9) + lag(nedarbas,2) +lag(infliacija,0)+ lag(mhope,11) + lag(phope,0) + lag(pramhope,0) + lag(shope,0) + lag(ul,1) + lag(vhope,5) + lag(vhope,12) + lag(vp,1) + lag(mp,0) + lag(ip,1)  + lag(kursas,5), data=data3)
mod_gkl = lm( gkl ~ lag(SP350,0)+ lag(kk,10) + lag(dll,9) + lag(nedarbas,2) +lag(infliacija,0)+ lag(mhope,11) + lag(phope,0) + lag(pramhope,0) + lag(shope,0) + lag(ul,1) + lag(vhope,5) + lag(vhope,12) + lag(vp,1) + lag(mp,0) + lag(ip,1)  + lag(kursas,5), data=data3)
stepAIC(mod_gkl)
mod_po_aic_gkl = lm(gkl ~ lag(infliacija, 0) + lag(phope, 0) + lag(pramhope,
0) + lag(vhope, 12) + lag(vp, 1) + lag(mp, 0) + lag(kursas,
5), data=data3)
ncvTest(mod_po_aic_gkl)
summary(mod_po_aic_gkl)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2)
+
lag(pramhope, 9) + lag(vhope, 21) + lag(vp, 10) + lag(mp, 9)# +9 lago, nes gkl lag(9)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(kursas,2), data = data3)
coeftest(modelis_po_aic, vcov=vcovHC)
summary(modelis_po_aic)
ncvTest(modelis_po_aic)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,3) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 2) + lag(kursas,2)
+
lag(kk, 2) + lag(nedarbas, 2) + lag(shope, 2) + lag(vhope, 2) # +2 lago, nes infliacija lag(2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) +lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 2) + lag(kursas,2)
+
lag(kk, 2) + lag(nedarbas, 2) + lag(shope, 2) + lag(vhope, 2) # +2 lago, nes infliacija lag(2)
, data = data3)
ncvTest(modelis_po_aic)
# Kadangi p-value > 0.05, tai H0 hipotezė priimama - duomenys homoskedastiški.
coeftest(modelis_po_aic, vcov=vcovHC)
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
library("rmarkdown")
View(data3)
# Chunk 1
library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")
library("ggplot2")
library("reshape2")
library("knitr")
library("tseries")
library("sandwich")
library("lmtest")
# Chunk 2
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
# Chunk 3
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kk","mp","ip")]*100
data2$euribor=((data2$euribor+1)^(1/12)-1)*12                    #reiketu gal menesio?
names(data2)[names(data2) == 'euribor'] <- 'palukanos'
data3=data.frame(diff(as.matrix(data2)))
data3$euribor=data2$euribor[-1]
names(data3)[names(data3) == 'euribor'] <- 'palukanos'
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
#tsdisplay(data3$infliacija)
p=apply(data3[,],2,function(i)adf.test(i,k=1)$p.value)
p=data.frame(p)
p[,1] = round(p[,1], digits = 2)
kable(p)
data3$OMX=data3$OMX-data3$palukanos
data3$SP350=data3$SP350-data3$palukanos
data3$SP500=data3$SP500-data3$palukanos
# Chunk 4
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
View(data3)
Sys.setlocale(locale = "en_LT.UTF-8")
akc = melt(data3[,c("OMX","SP350","SP500")], id=c("Data"))
ggplot(akc) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+
guides(col=guide_legend(title="Kintamieji")) +
ggtitle("Akcijų indeksų mėnesiniai grąžų pokyčiai")
# Chunk 1
library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")
library("ggplot2")
library("reshape2")
library("knitr")
library("tseries")
library("sandwich")
library("lmtest")
# Chunk 2
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
# Chunk 3
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kk","mp","ip")]*100
data2$euribor=((data2$euribor+1)^(1/12)-1)*12                    #reiketu gal menesio?
names(data2)[names(data2) == 'euribor'] <- 'palukanos'
data3=data.frame(diff(as.matrix(data2)))
data3$euribor=data2$euribor[-1]
names(data3)[names(data3) == 'euribor'] <- 'palukanos'
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
#tsdisplay(data3$infliacija)
p=apply(data3[,],2,function(i)adf.test(i,k=1)$p.value)
p=data.frame(p)
p[,1] = round(p[,1], digits = 2)
kable(p)
data3$OMX=data3$OMX-data3$palukanos
data3$SP350=data3$SP350-data3$palukanos
data3$SP500=data3$SP500-data3$palukanos
# Chunk 4
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
View(data2)
# Chunk 1
library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")
library("ggplot2")
library("reshape2")
library("knitr")
library("tseries")
library("sandwich")
library("lmtest")
# Chunk 2
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
# Chunk 3
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kk","mp","ip")]*100
data2$euribor=((data2$euribor+1)^(1/12)-1)*12                    #reiketu gal menesio?
names(data2)[names(data2) == 'euribor'] <- 'palukanos'
data3=data.frame(diff(as.matrix(data2)))
data3$euribor=data2$euribor[-1]
names(data3)[names(data3) == 'euribor'] <- 'palukanos'
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
#tsdisplay(data3$infliacija)
p=apply(data3[,],2,function(i)adf.test(i,k=1)$p.value)
p=data.frame(p)
p[,1] = round(p[,1], digits = 2)
kable(p)
data3$OMX=data3$OMX-data3$palukanos
data3$SP350=data3$SP350-data3$palukanos
data3$SP500=data3$SP500-data3$palukanos
# Chunk 4
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
Data = rownames(data3)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
akc = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(akc) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+
guides(col=guide_legend(title="Kintamieji")) +
knit_with_parameters('~/Documents/kursiniam/kodas ir ataskaitos/juodrastis/antr_juodr.Rmd', encoding = 'UTF-8')
Sys.setlocale(locale = "en_LT.UTF-8")

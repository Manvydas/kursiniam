txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
apply(data3,2,class)
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind(data3,Data)
apply(data3,2,class)
data3=data.frame(diff(as.matrix(data2)))
apply(data3,2,class)
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
apply(data,2,class)
data3=cbind(data3,Data)
apply(data3,2,class)
data3=apply(data3[,-1],2,as.numeric)
apply(data3,2,class)
View(data3)
Data = rownames(data3)
class(Data)
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
#grafikui
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind(data3,Data)
data3=apply(data3[,-"Data"],2,as.numeric)
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind(data3,Data)
data3=apply(data3[,-"Data"],2,as.numeric)
data3=apply(data3[,-last],2,as.numeric)
View(data3)
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
View(data3)
View(data3)
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind(Data, data3)
View(data3)
data3=apply(data3[,-1],2,as.numeric)
data5=data3
data5[,c("infliacija")]=data[-1,c("infliacija")]
dd = melt(data5[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
apply(data3,2,class)
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
apply(data3,2,class)
View(data3)
?rbind
data3=cbind.data.frame(Data, data3, stringsAsFactors = FALSE)
apply(data3,2,class)
data3=cbind.data.frame(Data, data3, stringsAsFactors = TRUE)
apply(data3,2,class)
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3, stringsAsFactors = TRUE)
apply(data3,2,class)
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3, stringsAsFactors = FALSE)
apply(data3,2,class)
?stringasfactor
?stringasfactors
?cbind
data3=cbind.data.frame(Data, data3)
data3=apply(data3[,-1],2,as.numeric)
apply(data3,2,class)
data5=data3
data5[,c("infliacija")]=data[-1,c("infliacija")]
dd = melt(data5[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
apply(data3,2,class)
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","nedarbas","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data5=data3
data5[,c("infliacija")]=data[-1,c("infliacija")]
dd = melt(data5[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data5[,c("nedarbas")]=data[-1,c("nedarbas")]
dd = melt(data5[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
data3$nedarbas = data$nedarbas[-1]
#grafikui
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
apply(data3,2,class)
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","nedarbas","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data5=data3
dd = melt(data3[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
data3$nedarbas = data$nedarbas[-1]/10
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
data3$nedarbas = (data$nedarbas[-1])/100
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
data3$nedarbas = (data$nedarbas[-1])/100
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
data3$nedarbas = as.numeric(data$nedarbas[-1])/100
#grafikui
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
apply(data3,2,class)
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","nedarbas","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","nedarbas","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
data3$nedarbas = as.numeric(data$nedarbas[-1])/10
#grafikui
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
apply(data3,2,class)
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","nedarbas","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:3))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
dd = melt(data3[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3$infliacija = data$infliacija[-1]
data3$nedarbas = as.numeric(data$nedarbas[-1])/10
#grafikui
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
dd = melt(data3[,c("OMX","infliacija", "nedarbas", "Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
View(data)
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akcijų indeksų mėnesiniai procentiniai pokyčiai")
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akciju indeksu menesiniai procentiniai pokyciai")
par(mfrow=c(1,1))
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("Akciju indeksu menesiniai procentiniai pokyciai")
pairs(data3[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2, cex=2)
?pairs
?layout
?par
Sys.setlocale(category = "LC_ALL", locale = "LTH")
Sys.setlocale(category = "LC_ALL", locale = "en_LTH-utf8")
Sys.setlocale(category = "LC_ALL", locale = "en_LTH-utf-8")
Sys.setlocale(category = "LC_ALL", locale = "en_LT-utf-8")
Sys.getlocale()
Sys.setlocale()
Sys.setlocale(category = "LC_ALL", locale = "Lithuanian_Lithuania-utf-8")
Sys.setlocale(category = "LC_ALL", locale = "Lithuanian_Lithuania")

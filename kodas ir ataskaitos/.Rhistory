rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data5=data2
data5[,c("OMX","SP350","SP500")] = apply(data5[,c("OMX","SP350","SP500")],2,log)    #logaritmuojama akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data5$euribor=data5$euribor/12
data5=data.frame(diff(as.matrix(data5)))
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
pairs(data3[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data5=data2
data5[,c("OMX","SP350","SP500")] = apply(data5[,c("OMX","SP350","SP500")],2,log)    #logaritmuojama akcijų kainos, kursas
data5[,c("OMX","SP350","SP500")]=data5[,c("OMX","SP350","SP500")]*100
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data5$euribor=data5$euribor/12
data5=data.frame(diff(as.matrix(data5)))
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","SP350","SP350")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data5[,c("OMX","shope","phope")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
View(data3)
View(data5)
View(data)
View(data2)
View(data)
View(data3)
ggplot(data3, aes(Date, OMX)) + geom_line() +
scale_x_date(format = "%YM%m") + xlab("") + ylab("Daily Views")
ggplot(data3, aes(Date, OMX)) + geom_line() +
scale_x_date(format =  "%b-%Y") + xlab("") + ylab("Daily Views")
ggplot(data3, aes(Date, OMX)) + geom_line() +
scale_x_date(format =  "%b-%Y") + xlab("") + ylab("Daily Views")
View(data3)
rownames(data3)
Data = rownames(data3)
Data
class(Data)
p=format(as.Date(Data), "%YM%m")
class(Data)
as.Date(Data,"%YM%m")
Data,"%YM%m"
Data
as.Date(Data,"%YM%m")
?as.Date
as.Date(Data,format="%YM%m")
as.Date(Data,"%YM%m")
as.Date(Data,"%YM%d")
as.Date(Data,"%Y%d")
as.Date(Data,"%YM%h")
as.Date(Data,"%YM%d")
?as.Dates
?as.Date
as.Date(Data,"%YM%m")
as.Date(Data,"%Y%m")
as.Date(Data,"%YM%m")
as.Date(Data,"%YM%d")
Data
gsub("\\M", "-", Data, fixed=TRUE)
apply(Data,gsub("\\M", "-", fixed=TRUE))
apply(Data,FUN=gsub("\\M", "-", fixed=TRUE))
?apply
sapply(Data,FUN=gsub("\\M", "-", fixed=TRUE))
lapply(Data,FUN=gsub("\\M", "-", fixed=TRUE))
lapply(Data,gsub("\\M", "-", fixed=TRUE))
as.Date(Data,"%YM%d")
p=as.Date(Data,"%YM%d")
format(as.Date(p), "%Y%d")
format(as.Date(p), "%YM%d")
d=format(as.Date(p), "%d-%Y"")
d
d=format(as.Date(p), "%d-%Y"")
d
d=format(as.Date(p), "%d-%Y"")
d=format(p, "%d-%Y"")
d=format(p, "%d-%Y"")
d=format(p, "%d-%Y"")
d=format(as.Date(p), "%d-%Y""))
d=format(as.Date(p), "%d-%Y"")
d=format(as.Date(p), "%d-%Y"")
d=format(as.Date(p), "%d-%Y"")
d=format(as.Date(p, "%d-%Y""))
p=as.Date(Data,"%YM%d")
d=format(as.Date(p, "%d-%Y"))
d
d=format(as.Date(p), "%d-%Y")
d
d=format(as.Date(p), "%d-%Y")
d
ggplot(data3, aes(d, OMX)) + geom_line() +
scale_x_date(format =  "%b-%Y") + xlab("") + ylab("OMX kaina")
+ xlab("") + ylab("OMX kaina")
ggplot(data3, aes(d, OMX)) + geom_line() +
+ xlab("") + ylab("OMX kaina")
ggplot(data3, aes(d, OMX)) + geom_line() +
+ ylab("OMX kaina")
ggplot(data3, aes(d, OMX)) + geom_line()
ggplot(data3, aes(d, OMX)) + geom_line()
nrows(data3)
nrow(data3)
ggplot(data3, aes(1:170, OMX)) + geom_line() +
scale_x_date(format =  "%b-%Y") + xlab("") + ylab("OMX kaina")
ggplot(data3, aes(1:170, OMX))
ggplot(data3, aes(1:170, OMX)) + geom_line()
ggplot(data3, aes(1:170, OMX)) + geom_line() +
scale_x_date(format =  "%b-%Y")
ggplot(data3, aes(d, OMX)) + geom_line()
ggplot(data3, aes(1:170, OMX)) + geom_line()
ggplot(data = data3) +geom_line( aes(1:170, OMX))
ggplot(data = data3) +geom_line( aes(1:170, OMX))
nrow(data3)
scale_x_date(format =  "%b-%Y") + xlab("") + ylab("OMX kaina")
ggplot(data3, aes(1:170, OMX)) + geom_line() +
scale_x_date(format =  "%b-%Y") + xlab("") + ylab("OMX kaina")
plot(d~1:70)
plot(d~1:170)
plot(rnorm(170~1:170)
plot(rnorm(170)~1:170)
ggplot(data = data3) +geom_line( aes(1:170, OMX))
plot(rnorm(170)~1:170)
plot(1:170~1:170)
plot(1:170~1:170)
plot(1:170)
ggplot(data = data3) +geom_line( aes(1:170, OMX))
ggplot(data = data3) +geom_line( aes(1:170, OMX)+geom_line( aes(1:170, SP500) )
ggplot(data = data3) +geom_line( aes(1:170, OMX)
ggplot(data = data3) +geom_line( aes(1:170, OMX)
+ geom_line( aes(1:170, SP500) )
ggplot(data = data3) +geom_line( aes(1:170, OMX)
ggplot(data = data3)+geom_line( aes(1:170, OMX)
plot(1:170)
ggplot(data = data3)+geom_line( aes(1:170, OMX)
ggplot(data = data3)+geom_line( aes(1:170, OMX))
ggplot(data = data3)+geom_line( aes(1:170, OMX))
ggplot(data = data3)+geom_line( aes(1:170, OMX))+ geom_line( aes(1:170, SP500) )
ggplot(data = data3)+geom_line( aes(1:170, c(OMX,SP500)))
library(ggplot2)
library(reshape2)
?melt
View(data3)
data3$rownames
View(data3)
data3$row.names
rownames(data3)
?mlt
?melt
p=as.Date(Data,"%YM%d")
d=format(as.Date(p), "%d-%Y")
d
cbind(data3,d)
data3=cbind(data3,Data)
meltdf <- melt(data3,Data)
Data
Data
Data=d
data3=cbind(data3,Data)
meltdf <- melt(data3,Data)
View(data3)
data3=cbind(data3,Data)
meltdf <- melt(data3,Data)
data3=cbind(data3,Data)
meltdf <- melt(data3,Data)
rownames(data3)
ggplot(meltdf,aes(x=Year,y=value,colour=variable,group=variable)) + geom_line()
meltdf <- melt(data3,Data)
Data
xts(data3$OMX, as.Date(Data, format='%m/%Y')
xts(data3$OMX, as.Date(Data, format='%m/%Y'))
xts(data3$OMX, as.Date(Data, format='%m/%Y'))
library(xts)
xts(data3$OMX, as.Date(Data, format='%m/%Y'))
xts(data3$OMX, as.Date(Data, format='%d/%Y'))
xts(data3$OMX, as.Date(Data, format='%d-%Y'))
xts(data3$OMX, as.Date(Data, format='%m-%Y'))
xts(data3$OMX, as.Date(Data, format='%d-%Y'))
Data = rownames(data3)
class(Data)
as.yearmon(Data, "%mM%Y")
Data = rownames(data3)
class(Data)
Data
as.yearmon(Data, "%YM%m")
p=as.Date(Data,"%h %Y")
p
p=as.Date(Data,"%b %Y")
p
Data
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
Data
p=as.Date(Data,"%b %Y")
p
p=as.Date(Data,"%b %Y")
Data
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
View(data)
rownames(data)<-NULL
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
euribor2=data5$euribor[-1]/12
data5=data.frame(diff(as.matrix(data5)))
data5$euribor=euribor
data3=data.frame(diff(as.matrix(data2)))
data3=cbind(data3,Data)
View(data3)
meltdf <- melt(data3,Data)
xts(data3$OMX, as.Date(Data, format='%m %Y'))
T=xts(data3$OMX, as.Date(Data, format='%m %Y'))
T=xts(data3$OMX, as.yearmon(Data, format='%m %Y'))
T
Y=xts(data3$SP350, as.yearmon(Data, format='%m %Y'))
?rollmean
ggplot(Data3,aes(x=Data,y=OMX,colour=variable,group=variable)) + geom_line()
ggplot(Data3,aes(x=Data,y=OMX,colour=variable,group=variable)) + geom_line()
ggplot(data3,aes(x=Data,y=OMX,colour=variable,group=variable)) + geom_line()
ggplot(data3,aes(x=Data,y=OMX)) + geom_line()
ggplot(data3) + geom_line(aes(x=Data,y=OMX))
ggplot(data3) + geom_line(aes(x=Data,y=c(OMX,SP500)))
ggplot(data3) + geom_line(aes(x=Data,y=c(OMX))) +geom_line(aes(x=Data,y=c(SP500)))
ggplot(data3) + geom_line(aes(x=Data,y=c(OMX)),color="RED") +geom_line(aes(x=Data,y=c(SP500)))
as.xts(data3)
View(data3)
?as.xts
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=c(SP500)))
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP500))
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP500))+ylab("%")
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP500))+ylab("% pokytis")+xlab("metai")
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
```
dd = melt(data3, id=c("Data"))
dd
ggplot(dd) + geom_line(aes(x=fecha, y=value, colour=variable)) +
scale_colour_manual(values=c("red","green","blue"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c("red","green","blue"))
dd
View(dd)
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c("red","green","blue"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:20))
View(dd)
dd = melt(data3[,c("OMX","SP350","SP500")], id=c("Data"))
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))
data3$gkl = data$gkl[-1]
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
#gkl turi neigiamas reikšmes, negalime logaritmuot, palieku šią problema nors bandžiau spręst (praleisti)
#min_abs_gkl=data2$gkl + data2$gkl %>% min() %>% abs()    #kad galetume logaritmuot, pridedu maziausio skaiciaus moduli
#data2$gkl = data2$gkl + min_abs_gkl
data5=data2
data5[,c("OMX","SP350","SP500")] = apply(data5[,c("OMX","SP350","SP500")],2,log)    #logaritmuojama akcijų kainos, kursas
data5[,c("OMX","SP350","SP500")]=data5[,c("OMX","SP350","SP500")]*100
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
euribor2=data5$euribor[-1]/12
data5=data.frame(diff(as.matrix(data5)))
data5$euribor=euribor
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]
View(data3)
mod3=lm(OMX~SP350+mp+ta+ul+dll+mhope+shope+phope+vhope+pramhope+euribor+nedarbas+infliacija,data=data3)
model5.stepAIC <- stepAIC(mod3, direction=c("both"))
View(data)
mod4=lm(formula = OMX ~ SP350 + ul+ phope + pramhope + nedarbas + infliacija, data = data3)
mod3=lm(OMX~SP350+mp+ta+ul+dll+mhope+shope+phope+vhope+pramhope+euribor+nedarbas+infliacija,data=data3)
View(data3)
data$gkl[-1]
mod3=lm(OMX~SP350+mp+ta+ul+dll+mhope+shope+phope+vhope+pramhope+euribor+nedarbas+infliacija,data=data3)
summary(mod3)
mod3=lm(OMX~SP350+mp+ta+ul+dll+mhope+shope+phope+vhope+pramhope+euribor+gkl+nedarbas+infliacija,data=data3)
summary(mod3)
model5.stepAIC <- stepAIC(mod3, direction=c("both"))
mod4=lm(formula = OMX ~ SP350 + ul+ phope + pramhope + nedarbas + infliacija, data = data3)
summary(mod4)
scale_colour_manual(values=c(1:4))+ylab("procentinis pokytis")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("procentinis pokytis")
scale_colour_manual(values=c(1:4))+ylab("procentinis pokytis")+ggtitle("akciju pokyciai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("procentinis pokytis")+ggtitle("akciju pokyciai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("procentinis pokytis")+ggtitle("akciju indeksu menesiniai pokyciai")
```
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akciju indeksu menesiniai pokyciai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akciju indeksu menesiniai % pokyciai")
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akcijų indeksu menesiniai % pokyciai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akcijų indeksu menesiniai % pokyciai")
```
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akcijų indeksu menesiniai % pokyciai")
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akcijų indeksu menesiniai % pokyciai")
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akciju indeksu menesiniai % pokyciai")
```
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akcių indeksu menesiniai % pokyciai")
Data = rownames(data3)
class(Data)
Data=as.yearmon(Data, "%YM%m")
library(ggplot2)
library(reshape2)
data3=cbind(data3,Data)
ggplot(data3) + geom_line(aes(x=Data,y=OMX),color="RED") +geom_line(aes(x=Data,y=SP350))+ylab("% pokytis")+xlab("metai")
dd = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(dd) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+ggtitle("akciju indeksu menesiniai % pokyciai")
locale
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
panel.hist <- function(x, ...)    #ši funkcija reikalinga grafikų lentelei išbrėžti (histogramos pateikimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
#gkl turi neigiamas reikšmes, negalime logaritmuot, palieku šią problema nors bandžiau spręst (praleisti)
#min_abs_gkl=data2$gkl + data2$gkl %>% min() %>% abs()    #kad galetume logaritmuot, pridedu maziausio skaiciaus moduli
#data2$gkl = data2$gkl + min_abs_gkl
data5=data2
data5[,c("OMX","SP350","SP500")] = apply(data5[,c("OMX","SP350","SP500")],2,log)    #logaritmuojama akcijų kainos, kursas
data5[,c("OMX","SP350","SP500")]=data5[,c("OMX","SP350","SP500")]*100
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
euribor2=data5$euribor[-1]/12
data5=data.frame(diff(as.matrix(data5)))
data5$euribor=euribor
data5$euribor=euribor2
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
data3[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = data3[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] *100
data4=data3
data4[,c("OMX","SP350","SP500","kursas","kk","mp","gkl","ip")] = apply(data4[,c("OMX","SP350","SP500","kursas","kk","mp","gkl","ip")],2,function(i)i=(exp(i)-1)*100)              #įdomumo prasme atstatyti duomenys iš logaritmo
#data4$gkl=data4$gkl - min_abs_gkl      #blogas kodas susijęs su gkl (praleisti)
diffeile = data.frame(sapply(data3,ndiffs))   #dėl įdomumo ar testas rekomenduoja dar diferencijuot
apply(data3 , 2, function(i){kpss.test(i)$p.value>0.05})   #stacionarumo testas praeitas, H0 - kad stacionarūs duomenys - gera ypatybė
Sys.getenv()
Sys.setenv(LANG = "lt")
Sys.getlocale()
Sys.setlocale("LC_TIME", "Lihuanian")
Sys.setlocale("LC_TIME", "Lihuanian")
Sys.getlocale()
Sys.setlocale("LC_TIME", "de_DE")
Sys.setlocale("LC_TIME", "en_LT")
Sys.setlocale("LC_CTYPE", "en_LT")
Sys.setlocale(category = "LC_ALL", locale = "lt")
cht
Sys.setlocale(category = "LC_ALL", locale = "cht")
Sys.setlocale(category = "LC_ALL", locale = "ltu")
Sys.setlocale(category = "LC_ALL", locale = "en")
Sys.setlocale(category = "LC_ALL", locale = "lt")
Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "en")
Sys.setlocale(category = "LC_ALL", locale = "us")
Sys.setlocale(category = "LC_ALL", locale = "LTH")
plot(1:10,main="ęąčėęį")
?adf.test
library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")
library("dynlm")
library(ggplot2)
library(reshape2)
library(tseries)
library("knitr")
?adf.test
corr.test(matrix(data3))
cor.test(matrix(data3))
cor.test(matrix(data3),matrix(data3))
View(data3)
View(data3)
ndiffs(data3$infliacija)
tsdisplay(data3$infliacija)

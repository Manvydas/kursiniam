ccfvalues
x <- scan("")
}
if(x==0)break
}
x=0
while(x==0){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
ccfvalues
x <- scan("")
}
for (i in 3:length(data3[1,])){
x=0
while(x==0){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
ccfvalues
x <- scan("")
}
if(x==00)break
}
x=0
while(x==0){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
ccfvalues
x <- scan("")
}
for (i in 3:length(data3[1,])){
x=0
while(x==0){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
ccfvalues
x <- scan("")
}
if(x==9)break
}
ccfvalues
print(ccfvalues)
print(names2(i-2))
print(names2[i-2])
for (i in 3:length(data3[1,])){
x=0
while(x==0){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
x <- scan("")
}
if(x==9)break
}
for (i in 3:length(data3[1,])){
x=0
while(x==0){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
print(names2[i-2])
print(ccfvalues)
x <- scan("")
}
if(x==9)break
}
class(ccfvalues)
class(ccfvalues[0])
class(ccfvalues[1])
ccfvalues[1]
as.numeric(ccfvalues[1])
as.numeric(ccfvalues[1])
as.numeric(as.character(ccfvalues[1]))
ccfvalues[1]
ccfvalues[1]
lagdata[i-2,-1]=ccfvalues
lagdata[i-2,1]= names2[i-2]
lagdata[i-2,-1]=ccfvalues
lagdata[i-2,1]= names2[i-2]
lagdata[i-2,1]= names2[i-2]
lagdata[i-2,1]= names2[i-2]
i-2
lagdata[i-2,1]= names2[i-2]
lagdata=0
lagdata[i-2,1]= names2[i-2]
data.frame(lagdata)
data.frame(lagdata)
lagdata[i-2,1]= names2[i-2]
lagdata[i-2,1]= names2[i-2]
data.frame(matrix(c(-19:19)))
names(lagdata)=c("lag",c(-19:19))
c("lag",c(-19:19))
data.frame(matrix(rep(0,39))
data.frame(matrix(rep(0,39)))
data.frame(matrix(rep(0,39)))
data.frame(matrix(rep(0,39),col=39))
data.frame(matrix(rep(0,39),col=39))
data.frame(matrix(rep(0,39*15),col=39))
matrix(rep(0,39*15),col=39)
matrix(rep(0,39*15),col=39)
ccfvalues[1]
str(ccfvalues)
ccfvalues$acf
ccfvalues$acf
acf[,1]=ccfvalues$acf
acf[,1]=ccfvalues$acf
acf=ccfvalues$acf
acd[,1]
acf[,1]
acf=ccfvalues$acf
acf[,1]
acf[1]
acf[5]
data.frame(cbind(acf,acf))
cbind(acf,acf)
if(i==3){lagdata=ccfvalues$acf}
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
if(i==3){lagdata=ccfvalues$acf}
else{
lagdata=cbind(lagdata,ccfvalues$acf)
}
}
lagdata
lagdata=data.frame(lagdata)
View(lagdata)
lagdata
lagdata(t)
t(lagdata)
lagdata=t(lagdata)
lagdata=data.frame(t(lagdata))
View(lagdata)
lagdata=data.frame(t(lagdata))
View(lagdata)
lagdata=data.frame(t(lagdata))
lagdata=data.frame(lagdata)
View(lagdata)
colnames(lagdata)=names2
View(lagdata)
rownames(lagdata)=c(-19,19)
rownames(lagdata)=c(-19:19)
View(lagdata)
View(lagdata)
lagdata=lagdata[-c(1:19),]
View(lagdata)
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shop","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
if(i==3){lagdata=round(ccfvalues$acf,3)}
else{
lagdata=cbind(lagdata,ccfvalues$acf)
}
}
lagdata=data.frame(lagdata)
colnames(lagdata)=names2
rownames(lagdata)=c(-19:19)
lagdata=lagdata[-c(1:19),]
View(lagdata)
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
if(i==3){lagdata=round(ccfvalues$acf,3)}
else{
lagdata=cbind(lagdata,round(ccfvalues$acf,3))
}
}
lagdata=data.frame(lagdata)
colnames(lagdata)=names2
rownames(lagdata)=c(-19:19)
lagdata=lagdata[-c(1:19),]
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
if(i==3){lagdata=round(ccfvalues$acf,3)}
else{
lagdata=cbind(lagdata,round(ccfvalues$acf,3))
}
}
lagdata=data.frame(lagdata)
colnames(lagdata)=names2
rownames(lagdata)=c(-19:19)
lagdata=lagdata[-c(1:19),]
View(lagdata)
Find_Max_CCF<- function(a,b)
{
d <- ccf(a, b, plot = FALSE)
cor = d$acf[,,1]
lag = d$lag[,,1]
res = data.frame(cor,lag)
res_max = res[which.max(res$cor),]
return(res_max)
}
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i]) #aiskinames laga
if(i==3){lagdata=round(ccfvalues$acf,3)}
else{
lagdata=cbind(lagdata,round(ccfvalues$acf,3))
}
}
ccfvalues$acf
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i]) #aiskinames laga
ccfvalues
i=5
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i]) #aiskinames laga
ccfvalues
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])[1] #aiskinames laga
ccfvalues
str(ccfvalues)
class(ccfvalues)
ccfvalues[1,1]
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])[1]
if(i==3){lagdata=round(ccfvalues$acf,3)}
else{
lagdata=cbind(lagdata,round(ccfvalues$acf,3))
}
}
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])[1]
if(i==3){lagdata=ccfvalues[1]}
else{
lagdata=cbind(lagdata,ccfvalues[1])
}
}
View(lagdata)
ccfvalues
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])
if(i==3){lagdata=ccfvalues[1]}
else{
lagdata=cbind(lagdata,ccfvalues[1])
}
}
ccfvalues
View(lagdata)
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])
if(i==3){lagdata=ccfvalues}
else{
lagdata=cbind(lagdata,ccfvalues)
}
}
View(lagdata)
?cbind
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])
if(i==3){lagdata=ccfvalues}
else{
lagdata=rbind(lagdata,ccfvalues)
}
}
View(lagdata)
rownames(lagdata)=names2
View(lagdata)
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
if(i==3){lagdata=round(ccfvalues$acf,3)}
else{
lagdata=cbind(lagdata,round(ccfvalues$acf,3))
}
}
lagdata=data.frame(lagdata)
colnames(lagdata)=names2
rownames(lagdata)=c(-19:19)
lagdata=lagdata[-c(1:19),]
View(lagdata)
View(lagdata)
apply(lagdata,2,abs)
apply(apply(lagdata,2,abs),2,max)
Find_Max_CCF<- function(a,b)
{
d <- ccf(a, b, plot = FALSE)
cor = d$acf[,,1]
lag = d$lag[,,1]
res = data.frame(cor,lag)
res_max = res[which.max(res$cor),]
return(res_max)
}
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])
if(i==3){lagdata=ccfvalues}
else{
lagdata=rbind(lagdata,ccfvalues)
}
}
rownames(lagdata)=names2
View(lagdata)
ccfvalues
for (i in 3:length(data3[1,])){
ccfvalues <- ccf(data3$OMX,data3[,i]) #aiskinames laga
if(i==3){lagdata=round(ccfvalues$acf,3)}
else{
lagdata=cbind(lagdata,round(ccfvalues$acf,3))
}
}
ccfvalues
ccfvalues[,1:19]
ccfvalues[1:19]
ccfvalues[-1:19]
ccfvalues[-(1:19)]
ccfvalues[-(-(1:19))]
d = d[1:19]
Find_Max_CCF<- function(a,b)
{
d <- ccf(a, b, plot = FALSE)
d = d[1:19]
cor = d$acf[,,1]
lag = d$lag[,,1]
res = data.frame(cor,lag)
res_max = res[which.max(res$cor),]
return(res_max)
}
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])
if(i==3){lagdata=ccfvalues}
else{
lagdata=rbind(lagdata,ccfvalues)
}
}
rownames(lagdata)=names2
View(lagdata)
data3$OMX>0
sum(data3$OMX>0)
sum(data3$OMX<0)
data(economics)
library(caret)
library(ggplot2)
library(pls)
data(economics)
economics
install.packages(caret)
install.packages("caret")
install.packages("pls")
library(caret)
library(ggplot2)
library(pls)
timeSlices <- createTimeSlices(1:nrow(economics),
initialWindow = 36, horizon = 12, fixedWindow = TRUE)
timeSlices
timeSlices <- createTimeSlices(1:nrow(economics),
initialWindow = 36, horizon = 1, fixedWindow = TRUE)
timeSlices
timeSlices[1]
timeSlices <- createTimeSlices(1:nrow(economics),
initialWindow = 36, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
economics
class(data3)
timeSlices <- createTimeSlices(1:nrow(data3),
initialWindow = 36, horizon = 1, fixedWindow = FALSE)
timeSlices[2]
timeSlices[1]
timeSlices[2]
timeSlices[1]
timeSlices <- createTimeSlices(1:nrow(data3),
initialWindow = 36, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
timeSlices[[1]]
timeSlices[1]
timeSlices[2]
timeSlices
trainSlices <- timeSlices[[1]]
trainSlices
testSlices <- timeSlices[[2]]
data3[trainSlices[[1]],c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")]
plsFitTime <- train(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2),
data = data3[trainSlices[[1]],c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
method = "pls",
preProc = c("center", "scale"))
?plsFitTime
?train
plsFitTime <- train(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2),
data = data3[trainSlices[[1]],c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
method = "pls",
preProc = c("center", "scale"))
plsFitTime <- train(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2),
data = data3[trainSlices[[1]],c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
method = "pls",
preProc = c("center", "scale"))
timeSlices <- createTimeSlices(12:nrow(data3),
initialWindow = 36, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
trainSlices <- timeSlices[[1]]
testSlices <- timeSlices[[2]]
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3)
plsFitTime <- train(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2),
data = data3[trainSlices[[1]],c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
method = "pls",
preProc = c("center", "scale"))
timeSlices <- createTimeSlices(1:nrow(data3),
initialWindow = 36, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
trainSlices <- timeSlices[[1]]
testSlices <- timeSlices[[2]]
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3)
timeSlices <- createTimeSlices(1:nrow(data3),
initialWindow = 36, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
trainSlices <- timeSlices[[1]]
testSlices <- timeSlices[[2]]
plsFitTime <- train(OMX ~ SP350 + infliacija + mhope + phope,
data = data3[trainSlices[[1]],c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
method = "pls",
preProc = c("center", "scale"))
plsFitTime <- train(OMX ~ SP350 + infliacija + mhope + phope,
data = data3[trainSlices[[1]],c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
method = "pls",
preProc = c("center", "scale"))
plsFitTime
plsFitTime$res
str(plsFitTime)
plsFitTime$residuals
timeSlices <- createTimeSlices(1:nrow(data3),
initialWindow = 36, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
trainSlices <- timeSlices[[1]]
testSlices <- timeSlices[[2]]
timeSlices <- createTimeSlices(1:nrow(data3),
initialWindow = 50, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
timeSlices[1]
timeSlices[2]
for(i in timeSlices){
print(i)
}
trainSlices
print(data3[i,])
for(i in trainSlices){
print(data3[i,])
}
for(i in trainSlices){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3)
plsFitTime <- train(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2),
data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
}
for(i in trainSlices){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3)
plsFitTime <- train(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2),
data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")],
}
for(i in trainSlices){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
}
testSlices[1]
for(i in trainSlices){
u=1
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
predict(model, testSlices[u])
u=u+1
}
for(i in trainSlices){
u=1
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
predict(modelis_po_aic, testSlices[u])
u=u+1
}
data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")]
predict(modelis_po_aic, testSlices[u])
for(i in trainSlices){
u=1
modelis_po_aic <- lm(OMX ~ SP350 + infliacija + mhope + phope, data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
predict(modelis_po_aic, testSlices[u])
u=u+1
}
for(i in trainSlices){
u=1
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
#predict(modelis_po_aic, testSlices[u])
u=u+1
}
predict(modelis_po_aic, data3[testSlices[u],])
for(i in trainSlices){
u=1
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
predict(modelis_po_aic, data3[testSlices[u],])
u=u+1
}
testSlices <- timeSlices[[2]]
timeSlices <- createTimeSlices(1:nrow(data3),
initialWindow = 50, horizon = 1, fixedWindow = FALSE)
timeSlices[1]
timeSlices[2]
trainSlices <- timeSlices[[1]]
testSlices <- timeSlices[[2]]
for(i in trainSlices){
u=1
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
predict(modelis_po_aic, data3[testSlices[u],])
u=u+1
}
testSlices[1]
data3[testSlices[u],]
data3[testSlices[u],]
data3[trainSlices[u],]
data3[trainSlices[u],]
i in trainSlices
str(testSlices)
unique(rapply(trainSlices, function(x) head(x, 1)))
unique(rapply(trainSlices, function(x) head(x, 1)))
trainSlices[u]
data3[trainSlices[u],]
as.numeric(testSlices[1])
as.numeric(testSlices[1])
length(testSlices)
str(testSlices)
testSlices[u]
testSlices[u]
testSlices[u]
testSlices[u,]
output <- matrix(unlist(trainSlices[u]),  byrow = TRUE)
output
output <- matrix(unlist(testSlice[u]),  byrow = TRUE)
output <- matrix(unlist(testSlice[u]),  byrow = TRUE)
output <- matrix(unlist(testSlice[u]),  byrow = TRUE)

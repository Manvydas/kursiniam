dbinom(10,100,0.072)
dbinom(90,100,0.072)
dbinom(90,100,0.072)
dbinom(90,100,0.072)
dbinom(90,10,0.072)
dbinom(90,10,0.072)
dnbinom(90,10,0.072)
?round
a <- dnbinom(90,10,0.072)
round(a, digits = 5)
p(A) <- 0.2
p(AA) <- p(A)*p(A)
p(A) <- 0.2
pA <- 0.2
pAA <- pA*pA
pAa <- 2*0.2*(1-0.2)
paa <- (1-0.2)^2
dmultinom(c(1,2,5),prob=c(pAA,pAa,paa))
p1 <- dmultinom(c(1,0,7),prob=c(pAA,pAa,paa))
p2 <- dmultinom(c(0,1,7),prob=c(pAA,pAa,paa))
p3 <- dmultinom(c(0,0,8),prob=c(pAA,pAa,paa))
p <- p1+p2+p3
round(dmultinom(c(1,2,5),prob=c(pAA,pAa,paa)),digits=5)
round(dmultinom(c(1,2,5),prob=c(pAA,pAa,paa)),digits=3)
p1 <- dmultinom(c(1,0,7),prob=c(pAA,pAa,paa))
p2 <- dmultinom(c(0,1,7),prob=c(pAA,pAa,paa))
p3 <- dmultinom(c(0,0,8),prob=c(pAA,pAa,paa))
p <- p1+p2+p3
p <- round(p1+p2+p3, digits=3)
ggeom(0.95,0.25)+1
min(which(cumsum(dgeom(0:100,0.25))>=0.95))
?ggeom
qgeom(0.95,0.25)+1 # +1 nes R paketas skaiciuoja nesekmiu skaiciu
min(which(cumsum(dgeom(0:100,0.25))>=0.95))
# 3 variantas
aplikacija <- 1
tikimybe <- 0
while(tikimybe<=0.95)
{tikimybe = pgeom(aplikacija-1,0.25)
aplikacija=aplikacija+1
}
aplikacija-1
?dbinom
plot(dbinom(n,0:n,p))
plot(dbinom(n,p))
plot(dbinom(n,prob=p))
plot(dbinom(0:n,n,p))
plot(dbinom(0:n,n,p)type="l")
plot(dbinom(0:n,n,p),type="l")
plot(dbinom(0:n,n,rep(0.3,60)),type="l")
plot(dbinom(0:60,60,rep(0.3,60)),type="l")
plot(dbinom(0:60,60,0.3),type="l")
dbinom(0:60,60,0.3)
dbinom(0:60,6,0.3)
dbinom(0:60,10000,0.3)
dbinom(0:60,600,0.3)
dbinom(0:60,60,0.3)
1:60
plot(dbinom(1:60,600,0.3),type="l")
dbinom(1:60,600,0.3)
plot(dbinom(1:60,60,0.3),type="l")
plot(dpois(1:60,60*0.3))
plot(dpois(1:60,60*0.3),type="l")
plot(dbinom(1:60,60,0.3),type="l")
#b) P(Y=k), kai k=1,...,60.
plot(dpois(1:60,60*0.3),type="l")
plot(dbinom(1:60,60,0.3)/dpois(1:60,60*0.3),type="l")
dbinom(1:60,59,0.3)
\usepackage[utf8]{inputnc}
usepackage[utf8]{inputnc}
install.packages("utf8")
render("input.Rmd", "pdf_document")
install.packages("pandoc")
require(knitr)
require(markdown)
setwd("~/Documents/kursiniam_pauliaus/creative/clean data")
library("quantmod")
library("forecast")
library("xts")
istraukimas <- function(salis,folderio_pav,failo_pav){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally and calendar adjusted data",]
data = data[data$UNIT=="Index, 2010=100",]
data = data[data$GEO == salis,]
setwd('..')
return(data[,c(1,7)])
}
istraukimas2 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,6)])
}
```
Nustatoma direktorija:
```{r}
setwd("~/Documents/kursiniam_pauliaus/creative/clean data")
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
colnames(data) <- c("Verte", "Data")
data[,1]
class(data)
ts <- xts(data$Verte, as.Date(data$data, "%m/%d/%Y"))
data.monthly <- data[ endpoints(data, on="months", k=1), ]
omx=read.csv("omx.csv")
duom=omx[,c(2,5)]
colnames(data) <- c("Verte", "Data")
View(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
duom[,1]
class(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%Y-%m-%d"))
library("quantmod")
library("forecast")
library("xts")
istraukimas <- function(salis,folderio_pav,failo_pav){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally and calendar adjusted data",]
data = data[data$UNIT=="Index, 2010=100",]
data = data[data$GEO == salis,]
setwd('..')
return(data[,c(1,7)])
}
istraukimas2 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,6)])
}
omx=read.csv("omx.csv")
duom=omx[,c(2,5)]
colnames(duom) <- c("Verte", "Data")
duom[,1]
class(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
data.monthly <- duom[ endpoints(duom, on="months", k=1), ]
ts_m = apply.monthly(ts, mean)
salis="Lithuania"
folderio_pav="Turnover in industry - consumer durables"
failo_pav="sts_intv_m_1_Data.csv"
ilgalaikio_vartojimo_prekes=istraukimas(salis,folderio_pav,failo_pav)
colnames(ilgalaikio_vartojimo_prekes) <- c("Data", "ilg_vart_prek")
View(ilgalaikio_vartojimo_prekes)
View(ts_m)
folderio_pav="Turnover and volume of sales in wholesale and retail trade - monthly data"
failo_pav="sts_trtu_m_1_Data.csv"
apyvarta=istraukimas(salis,folderio_pav,failo_pav)                              #didmeninės ir mažmeninės prekybos apyvarta ir pardavimų apimtis
colnames(apyvarta) <- c("Data", "Apyvarta")
View(apyvarta)
indikatorius="Construction confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
statybu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(statybu_pasitikejimas) <- c("Data", "statyb_pasitik")
View(statybu_pasitikejimas)
istraukimas <- function(salis,folderio_pav,failo_pav){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally and calendar adjusted data",]
data = data[data$UNIT=="Index, 2010=100",]
data = data[data$GEO == salis,]
setwd('..')
return(data[,c(1,7)])
}
istraukimas2 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,5)])
}
istraukimas3 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,6)])
}
indikatorius="Construction confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
statybu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(statybu_pasitikejimas) <- c("Data", "statyb_pasitik")
View(statybu_pasitikejimas)
indikatorius="Services Confidence Indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
paslaugu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(paslaugu_pasitikejimas) <- c("Data", "paslaugu_pasitik")
View(paslaugu_pasitikejimas)
View(paslaugu_pasitikejimas)
indikatorius="Consumer confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
vartotoju_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(vartotoju_pasitikejimas) <- c("Data", "vartot_pasitik")
View(vartotoju_pasitikejimas)
indikatorius="Retail confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
mazmeninis_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius) #mažmeninės prekybos pasitikėjimo rodiklis
colnames(mazmeninis_pasitikejimas) <- c("Data", "mazm_pasitik")
View(mazmeninis_pasitikejimas)
indikatorius="Industrial confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
pramones_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(pramones_pasitikejimas) <- c("Data", "pram_pasitik")
View(pramones_pasitikejimas)
indikatorius="Business activity (sales) development over the past 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
verslo_aktyvumas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(verslo_aktyvumas) <- c("Data", "versl_aktyv")
View(verslo_aktyvumas)
indikatorius="Business activity (sales) development over the past 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
verslo_aktyvumas=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)
colnames(verslo_aktyvumas) <- c("Data", "versl_aktyv")
View(verslo_aktyvumas)
View(verslo_aktyvumas)
View(verslo_aktyvumas)
View(verslo_aktyvumas)
indikatorius="Volume of stocks currently hold"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
turimos_akcijos=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(turimos_akcijos) <- c("Data", "turimos_akc")
View(verslo_aktyvumas)
View(turimos_akcijos)
indikatorius="Expectations of the number of orders placed with suppliers over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
uzsakymu_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)
colnames(uzsakymu_lukesciai) <- c("Data", "uzsak_luk")
View(uzsakymu_lukesciai)
indikatorius="Employment expectations over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
darbo_lygio_lukesciai=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(darbo_lygio_lukesciai) <- c("Data", "darb_lyg_luk")
View(darbo_lygio_lukesciai)
indikatorius="Employment expectations over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
darbo_lygio_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)
colnames(darbo_lygio_lukesciai) <- c("Data", "darb_lyg_luk")
setwd("Infliacija")
duom = read.csv("prc_hicp_mv12r_1_Data.csv")
duom = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
setwd('..')
setwd("Infliacija")
data = read.csv("prc_hicp_mv12r_1_Data.csv")
data = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
setwd('..')
omx=read.csv("omx.csv")
duom=omx[,c(2,5)]
colnames(duom) <- c("Verte", "Data")
duom[,1]
class(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m = apply.monthly(ts, mean)
setwd("Infliacija")
data = read.csv("prc_hicp_mv12r_1_Data.csv")
data = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
setwd('..')
View(infliacija)
salis="Lithuania"
folderio_pav="Turnover in industry - consumer durables"
failo_pav="sts_intv_m_1_Data.csv"
ilgalaikio_vartojimo_prekes=istraukimas(salis,folderio_pav,failo_pav)
colnames(ilgalaikio_vartojimo_prekes) <- c("Data", "ilg_vart_prek")
omx=read.csv("omx.csv")
duom=omx[,c(2,5)]
colnames(duom) <- c("Verte", "Data")
duom[,1]
class(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m = apply.monthly(ts, mean)
salis="Lithuania"
folderio_pav="Turnover in industry - consumer durables"
failo_pav="sts_intv_m_1_Data.csv"
ilgalaikio_vartojimo_prekes=istraukimas(salis,folderio_pav,failo_pav)
colnames(ilgalaikio_vartojimo_prekes) <- c("Data", "ilg_vart_prek")
folderio_pav="Turnover and volume of sales in wholesale and retail trade - monthly data"
failo_pav="sts_trtu_m_1_Data.csv"
apyvarta=istraukimas(salis,folderio_pav,failo_pav)                              #didmeninės ir mažmeninės prekybos apyvarta ir pardavimų apimtis
colnames(apyvarta) <- c("Data", "Apyvarta")
indikatorius="Construction confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
statybu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(statybu_pasitikejimas) <- c("Data", "statyb_pasitik")
indikatorius="Services Confidence Indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
paslaugu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(paslaugu_pasitikejimas) <- c("Data", "paslaugu_pasitik")
indikatorius="Consumer confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
vartotoju_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(vartotoju_pasitikejimas) <- c("Data", "vartot_pasitik")
indikatorius="Retail confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
mazmeninis_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius) #mažmeninės prekybos pasitikėjimo rodiklis
colnames(mazmeninis_pasitikejimas) <- c("Data", "mazm_pasitik")
indikatorius="Industrial confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
pramones_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
colnames(pramones_pasitikejimas) <- c("Data", "pram_pasitik")
indikatorius="Business activity (sales) development over the past 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
verslo_aktyvumas=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)
colnames(verslo_aktyvumas) <- c("Data", "versl_aktyv")
indikatorius="Volume of stocks currently hold"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
turimos_akcijos=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)
colnames(turimos_akcijos) <- c("Data", "turimos_akc")
indikatorius="Expectations of the number of orders placed with suppliers over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
uzsakymu_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)
colnames(uzsakymu_lukesciai) <- c("Data", "uzsak_luk")
indikatorius="Employment expectations over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
darbo_lygio_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)
colnames(darbo_lygio_lukesciai) <- c("Data", "darb_lyg_luk")
setwd("Infliacija")
data = read.csv("prc_hicp_mv12r_1_Data.csv")
data = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
setwd('..')
View(data)
View(infliacija)
lentele <- cbind(ts_m, apyvarta[,2], ilgalaikio_vartojimo_prekes[,2], darbo_lygio_lukesciai[,2], infliacija[,2] )
View(duom)
View(ts_m)
lentele <- cbind(ts_m, apyvarta[,2], darbo_lygio_lukesciai[,2], infliacija[,2] )
View(lentele)
lentele <- cbind(ts_m, apyvarta[,apyvarta], darbo_lygio_lukesciai[,2], infliacija[,2] )
lentele <- cbind(ts_m, apyvarta[apyvarta], darbo_lygio_lukesciai[,2], infliacija[,2] )
lentele <- cbind(ts_m, apyvarta[,Apyvarta], darbo_lygio_lukesciai[,2], infliacija[,2] )
View(apyvarta)
lentele <- cbind(ts_m, apyvarta[Apyvarta], darbo_lygio_lukesciai[,2], infliacija[,2] )
lentele <- cbind(ts_m, apyvarta[,Apyvarta], darbo_lygio_lukesciai[,2], infliacija[,2] )
apyvarta[,Apyvarta]
View(apyvarta)
lentele <- cbind(ts_m, apyvarta[,Apyvarta], darbo_lygio_lukesciai[,2], infliacija[,2], mazmeninis_pasitikejimas[,2], paslaugu_pasitikejimas[,2], pramones_pasitikejimas[,2], statybu_pasitikejimas[,2], turimos_akcijos[,2], uzsakymu_lukesciai[,2], vartotoju_pasitikejimas[,2] )
lentele <- cbind(ts_m, apyvarta[,2], darbo_lygio_lukesciai[,2], infliacija[,2], mazmeninis_pasitikejimas[,2], paslaugu_pasitikejimas[,2], pramones_pasitikejimas[,2], statybu_pasitikejimas[,2], turimos_akcijos[,2], uzsakymu_lukesciai[,2], vartotoju_pasitikejimas[,2] )
lentele <- cbind(ts_m, apyvarta[,2], darbo_lygio_lukesciai[,2], infliacija[,2], mazmeninis_pasitikejimas[,2], paslaugu_pasitikejimas[,2], pramones_pasitikejimas[,2], statybu_pasitikejimas[,2], turimos_akcijos[,2], uzsakymu_lukesciai[,2], vartotoju_pasitikejimas[,2], verslo_aktyvumas[,2] )
View(lentele)
lentele <- cbind(ts_m, apyvarta[,2], darbo_lygio_lukesciai[,2], infliacija[,2], mazmeninis_pasitikejimas[,2], paslaugu_pasitikejimas[,2], pramones_pasitikejimas[,2], statybu_pasitikejimas[,2], turimos_akcijos[,2], uzsakymu_lukesciai[,2], vartotoju_pasitikejimas[,2], verslo_aktyvumas[,2] )
colnames(lentele) <- c("ts_m", "apyvarta", "darbo_lygio_lukesciai", "infliacija", "mazmeninis_pasitikejimas", "paslaugu_pasitikejimas", "pramones_pasitikejimas", "statybu_pasitikejimas", "turimos_akcijos", "uzsakymu_lukesciai", "vartotoju_pasitikejimas", "verslo_aktyvumas" )
View(lentele)
setwd("~/Documents/kursiniam_pauliaus/creative/clean data")
omx=read.csv("omx.csv")
duom=omx[,c(2,5)]
colnames(duom) <- c("Verte", "Data")
duom[,1]
class(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m = apply.monthly(ts, mean)
# Chunk 1
library("quantmod")
library("forecast")
library("xts")
b <- lentele[-nrow(200),]
b <- lentele[-nrow(1),]
duomenys <- lentele[1:(dim(lentele)[1]-1),]
View(duomenys)
viskas <- cbind(duomenys,ilgalaikio_vartojimo_prekes[,2])
View(viskas)
library("quantmod")
library("forecast")
library("xts")
istraukimas <- function(salis,folderio_pav,failo_pav){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally and calendar adjusted data",]
data = data[data$UNIT=="Index, 2010=100",]
data = data[data$GEO == salis,]
setwd('..')
return(data[,c(1,7)])
}
istraukimas2 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,5)])
}
istraukimas3 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,6)])
}
omx=read.csv("omx.csv")
duom=omx[,c(2,5)]
colnames(duom) <- c("Verte", "Data")
duom[,1]
class(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m = apply.monthly(ts, mean)
setwd("~/Documents/kursiniam/duomenys")
ts_m = apply.monthly(ts, first)
View(ts_m)
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
mod=lm(ts_m ~ apyvarta + darbo_lygio_lukesciai + infliacija + mazmeninis_pasitikejimas + paslaugu_pasitikejimas + pramones_pasitikejimas + statybu_pasitikejimas + turimos_akcijos + uzsakymu_lukesciai + vartotoju_pasitikejimas + verslo_aktyvumas + ilgalaikio_vartojimo_prekes + ilgalaikio_vartojimo_prekes, data= viskas)
?tslm
?lm
mod=lm(ts_m ~ apyvarta + darbo_lygio_lukesciai + infliacija + mazmeninis_pasitikejimas + paslaugu_pasitikejimas + pramones_pasitikejimas + statybu_pasitikejimas + turimos_akcijos + uzsakymu_lukesciai + vartotoju_pasitikejimas + verslo_aktyvumas + ilgalaikio_vartojimo_prekes + ilgalaikio_vartojimo_prekes)
library("fpp")
install.packages("fpp")
library("fpp")
View(apyvarta)
View(darbo_lygio_lukesciai)
View(data)
View(duom)
View(ilgalaikio_vartojimo_prekes)
View(infliacija)
View(lentele)
View(mazmeninis_pasitikejimas)
View(omx)
View(paslaugu_pasitikejimas)
View(paslaugu_pasitikejimas)
View(pramones_pasitikejimas)
View(statybu_pasitikejimas)
View(ts)
View(ts_m)
View(turimos_akcijos)
View(uzsakymu_lukesciai)
View(vartotoju_pasitikejimas)
View(verslo_aktyvumas)
View(viskas)
View(vartotoju_pasitikejimas)
View(vartotoju_pasitikejimas)
View(uzsakymu_lukesciai)
View(viskas)
View(apyvarta)
library("quantmod")
library("forecast")
library("xts")
library("tidyverse")
library("fpp")
istraukimas <- function(salis,folderio_pav,failo_pav){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally and calendar adjusted data",]
data = data[data$UNIT=="Index, 2010=100",]
data = data[data$GEO == salis,]
setwd('..')
return(data[,c(1,7)])
}
istraukimas2 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,5)])
}
istraukimas3 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,6)])
}
omx=read.csv("omx.csv")
duom=omx[,c(2,5)]
colnames(duom) <- c("Verte", "Data")
duom[,1]
class(duom)
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m_pirma = apply.monthly(ts, first)
ts_m = apply.monthly(ts, mean)
tsdisplay(ts_m, plot.type="scatter")
tsdisplay(ts_m_pirma, plot.type="scatter")
tsdisplay(ts_m_pirma, plot.type="scatter")

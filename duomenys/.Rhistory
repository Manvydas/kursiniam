library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")
istraukimas <- function(salis,folderio_pav,failo_pav,indikatorius,versija){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",]
data = data[data$GEO == salis,]
setwd('..')
if(versija == 1){
data = data[data$UNIT=="Index, 2010=100",]
return(select(data,TIME,Value))
}
if(versija == 2){
data = data[data$INDIC == indikatorius,]
return(select(data,TIME,Value))
}
else{print("klaida del versiju pasirinkimo")}
}
setwd("..")
setwd("duomenys")
omx=read.csv("omx.csv")
duom=select(omx,OMX.raw,OMXV.Value)
colnames(duom) <- c("Data", "Verte")
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m = apply.monthly(ts, last)
colnames(ts_m) <- c("OMX")
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Domestic producer prices - total industry (excluding construction)"
failo_pav="sts_inppd_m_1_Data.csv"
ilgalaikio_vartojimo_prekes=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(ilgalaikio_vartojimo_prekes) <- c("Data", "gam_kain")
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Domestic producer prices - total industry (excluding construction)"
failo_pav="sts_inppd_m_1_Data.csv"
gamintoju_kainos=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(ilgalaikio_vartojimo_prekes) <- c("Data", "gam_kain")
View(gamintoju_kainos)
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
View(industrine_produkcija)
library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")
istraukimas <- function(salis,folderio_pav,failo_pav,indikatorius,versija){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",]
data = data[data$GEO == salis,]
setwd('..')
if(versija == 1){
data = data[data$UNIT=="Index, 2010=100",]
return(select(data,TIME,Value))
}
if(versija == 2){
data = data[data$INDIC == indikatorius,]
return(select(data,TIME,Value))
}
else{print("klaida del versiju pasirinkimo")}
}
setwd("..")
setwd("duomenys")
omx=read.csv("omx.csv")
duom=select(omx,OMX.raw,OMXV.Value)
colnames(duom) <- c("Data", "Verte")
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m = apply.monthly(ts, last)
colnames(ts_m) <- c("OMX")
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Domestic producer prices - total industry (excluding construction)"
failo_pav="sts_inppd_m_1_Data.csv"
gamintoju_kainos=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(gamintoju_kainos) <- c("Data", "gam_kain")
View(gamintoju_kainos)
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
View(industrine_produkcija)
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,2)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
View(industrine_produkcija)
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,3)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,3)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
View(industrine_produkcija)
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
View(industrine_produkcija)
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Production in industry - monthly data"
failo_pav="sts_inpr_m_1_Data.csv"
industrine_produkcija=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(industrine_produkcija) <- c("Data", "industr_prod")
View(industrine_produkcija)
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Euribor 3-month - Historical close, average of observations through period"
failo_pav="euribor.csv"
euribor=istraukimas(salis,folderio_pav,failo_pav,indikatorius,1)
colnames(euribor) <- c("Data", "euribor")
istraukimas5 <- function(salis,folderio_pav,failo_pav,indikatorius,versija){
istraukimas5 <- function(folderio_pav,failo_pav,versija){
setwd(folderio_pav)
data=read.csv(failo_pav)}
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Euribor 3-month - Historical close, average of observations through period"
failo_pav="euribor.csv"
euribor=istraukimas5(folderio_pav,failo_pav,1)
colnames(euribor) <- c("Data", "euribor")
}
istraukimas5 <- function(folderio_pav,failo_pav,versija){
setwd(folderio_pav)
data=read.csv(failo_pav)
}
setwd("..")
setwd("duomenys")
salis="Lithuania"
indikatorius = NA                                                         # kol kas indikatoriaus nebus
folderio_pav="Euribor 3-month - Historical close, average of observations through period"
failo_pav="euribor.csv"
euribor=istraukimas5(folderio_pav,failo_pav,1)
colnames(euribor) <- c("Data", "euribor")
setwd("..")
setwd("duomenys")
omx=read.csv("omx.csv")
duom=select(omx,OMX.raw,OMXV.Value)
colnames(duom) <- c("Data", "Verte")
ts <- xts(duom$Verte, as.Date(duom$Data, "%m/%d/%Y"))
ts_m = apply.monthly(ts, last)
colnames(ts_m) <- c("OMX")
library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")

setwd("creative/clean data")
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data[,1]
class(data)
data=xts(data[, -2], order.by=as.Date(data[,2]))
class(data)
library("forecast")
library("quantmod")
y
data=xts(data[, -2], order.by=(data[,2]))
monthly.omx <- data[ endpoints(data, on="months", k=1), ]
data=xts(data[, -2], order.by=as.date(data[,2]))
data=xts(data[, -2], order.by=as.Date(data[,2]))
data
data
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data
rownames(data) = data[,2]
data
data=data[,-2]
data
data
as.xts(data)
rownames(data) = data[,2]
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data[,1]
class(data)
rownames(data) = data[,2]
data
data=data[,-2]
data
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data[,1]
class(data)
rownames(data) = data[,2]
as.xts(data)
data[,2]=1
data
as.xts(data)
rownames(data) = as.Date(data[,2])
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
class(data)
rownames(data) = as.Date(data[,2])
as.Date(data[,2])
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data
rownames(data) = as.Date(data[,2],"%m/%d/%y")
as.Date(data[,2],"%m/%d/%y")
data[,2]
as.Date(data[,2],"%m/%d/%Y")
data=xts(data[, -2], order.by=as.Date(data[,2],"%m/%d/%Y"))
data
monthly.omx <- data[ endpoints(data, on="months", k=1), ]
monthly.omx
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data=xts(data[, -2], order.by=as.Date(data[,2],"%m/%d/%Y"))
monthly.omx <- data[ endpoints(data, on="months", k=1), ]    # neapatikrinta ar gerai pakeicia
monthly.omx
setwd("Infliacija")
data = read.csv("prc_hicp_mv12r_1_Data.csv")
data = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
salis="Lithuania"
setwd("Infliacija")
data = read.csv("prc_hicp_mv12r_1_Data.csv")
data = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
infliacija
data
setwd('..')
setw("Nedarbas")
setwd("Nedarbas")
data = read.csv("ei_lmhu_m.csv")
data
data = data[data$GEO == salis,]
data
View(data)
data = read.csv("ei_lmhu_m.csv")
data = data[data$GEO == salis,]
View(data)
data = read.csv("ei_lmhu_m.csv")
data = data[data$GEO == salis,]
data
data = read.csv("ei_lmhu_m.csv")
data
setwd("Nedarbas")
data = read.csv("ei_lmhu_m_1_Data.csv")
data = data[data$GEO == salis,]
data
data = data[data$GEO == salis,]
data
View(data)
nedarbas = data[,c(1,5)]
nedarbas
function (..., list = character(), package = NULL, lib.loc = NULL,
data = read.csv("ei_lmhu_m_1_Data.csv")
data = data[data$GEO == salis,]
data = read.csv("ei_lmhu_m_1_Data.csv")
data = data[data$GEO == salis,]
View(data)
nedarbas = data[,c(2,7)]
nedarbas
nedarbas = data[,c(1,6)]
data = read.csv("ei_lmhu_m_1_Data.csv")
data = data[data$GEO == salis,]
nedarbas = data[,c(1,6)]
nedarbas
nedarbas = data[,c(1,6)]
function (x, d = NA, D = NA, max.p = 5, max.q = 5, max.P = 2,
function (x, d = NA, D = NA, max.p = 5, max.q = 5, max.P = 2,
fit <- auto.arima(monthly.omx, xreg=cbind(apyvarta[-c(length(apyvarta),length(apyvarta)-1),2]))
setwd('..')
library("quantmod")
library("forecast")
istraukimas <- function(salis,folderio_pav,failo_pav){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally and calendar adjusted data",]
data = data[data$UNIT=="Index, 2010=100",]
data = data[data$GEO == salis,]
setwd('..')
return(data[,c(1,7)])
}
istraukimas2 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Seasonally adjusted data, not calendar adjusted data",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,5)])
}
getwd()
setwd("creative/clean data")
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data=xts(data[, -2], order.by=as.Date(data[,2],"%m/%d/%Y"))
monthly.omx <- data[ endpoints(data, on="months", k=1), ]                       # neapatikrinta ar gerai pakeicia
salis="Lithuania"
folderio_pav="Turnover in industry - consumer durables"
failo_pav="sts_intv_m_1_Data.csv"
ilgalaikio_vartojimo_prekės=istraukimas(salis,folderio_pav,failo_pav)
folderio_pav="Turnover and volume of sales in wholesale and retail trade - monthly data"
failo_pav="sts_trtu_m_1_Data.csv"
apyvarta=istraukimas(salis,folderio_pav,failo_pav)                              #didmeninės ir mažmeninės prekybos apyvarta ir pardavimų apimtis
indikatorius="Construction confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
statybu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Services Confidence Indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
paslaugu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Consumer confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
vartotoju_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Retail confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
mazmeninis_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius) #mažmeninės prekybos pasitikėjimo rodiklis
indikatorius="Industrial confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
pramones_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Business activity (sales) development over the past 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
verslo_aktyvumas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Volume of stocks currently hold"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
turimos_akcijos=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Expectations of the number of orders placed with suppliers over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
uzsakymu_lukesciai=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Employment expectations over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
darbolygio_lukesciai=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
setwd("Infliacija")
data = read.csv("prc_hicp_mv12r_1_Data.csv")
data = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
setwd('..')
setwd("Nedarbas")
data = read.csv("ei_lmhu_m_1_Data.csv")
data = data[data$GEO == salis,]
nedarbas = data[,c(1,6)]
setwd('..')
library(tidyverse)
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(ggplot2)
library(dplyr)
library(nycflights13)
library(ggplot2)
library(quantmod)
library(forecast)
library(ggplot2)
library(dplyr)
geom_point(mapping = aes(x = monthly.omx , y = infliacija))
ggplot() +
geom_point(mapping = aes(x = monthly.omx , y = infliacija))
class(apyvarta)
apyvarta
View(darbolygio_lukesciai)
View(darbolygio_lukesciai)
View(data)
View(data)
View(ilgalaikio_vartojimo_prekes)
View(darbolygio_lukesciai)
View(apyvarta)
View(darbolygio_lukesciai)
View(data)
View(ilgalaikio_vartojimo_prekes)
View(infliacija)
View(mazmeninis_pasitikejimas)
View(monthly.omx)
View(nedarbas)
View(omx)
View(nedarbas)
View(omx)
View(paslaugu_pasitikejimas)
View(paslaugu_pasitikejimas)
View(pramones_pasitikejimas)
View(statybu_pasitikejimas)
View(turimos_akcijos)
View(verslo_aktyvumas)
View(verslo_aktyvumas)
View(vartotoju_pasitikejimas)
View(uzsakymu_lukesciai)
View(turimos_akcijos)
View(statybu_pasitikejimas)
View(pramones_pasitikejimas)
View(paslaugu_pasitikejimas)
View(omx)
View(nedarbas)
View(monthly.omx)
View(mazmeninis_pasitikejimas)
View(infliacija)
View(ilgalaikio_vartojimo_prekes)
View(data)
View(darbolygio_lukesciai)
View(apyvarta)
istraukimas <- function(salis,folderio_pav,failo_pav){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",]
data = data[data$UNIT=="Index, 2010=100",]
data = data[data$GEO == salis,]
setwd('..')
return(data[,c(1,7)])
}
istraukimas2 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,5)])
}
getwd()
setwd("creative/clean data")
omx=read.csv("omx.csv")
data=omx[,c(2,5)]
data=xts(data[, -2], order.by=as.Date(data[,2],"%m/%d/%Y"))
monthly.omx <- data[ endpoints(data, on="months", k=1), ]                       # neapatikrinta ar gerai pakeicia
salis="Lithuania"
folderio_pav="Turnover in industry - consumer durables"
failo_pav="sts_intv_m_1_Data.csv"
ilgalaikio_vartojimo_prekės=istraukimas(salis,folderio_pav,failo_pav)
folderio_pav="Turnover and volume of sales in wholesale and retail trade - monthly data"
failo_pav="sts_trtu_m_1_Data.csv"
apyvarta=istraukimas(salis,folderio_pav,failo_pav)                              #didmeninės ir mažmeninės prekybos apyvarta ir pardavimų apimtis
indikatorius="Construction confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
statybu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Services Confidence Indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
paslaugu_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Consumer confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
vartotoju_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Retail confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
mazmeninis_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius) #mažmeninės prekybos pasitikėjimo rodiklis
indikatorius="Industrial confidence indicator"
folderio_pav="Sentiment indicators - monthly data"
failo_pav="ei_bssi_m_r2_1_Data.csv"
pramones_pasitikejimas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)
indikatorius="Business activity (sales) development over the past 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
verslo_aktyvumas=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)              #blogai
indikatorius="Volume of stocks currently hold"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
turimos_akcijos=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)             #blogai
indikatorius="Expectations of the number of orders placed with suppliers over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
uzsakymu_lukesciai=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)              #blogai
indikatorius="Employment expectations over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
darbolygio_lukesciai=istraukimas2(salis,folderio_pav,failo_pav,indikatorius)                 #blogai
setwd("Infliacija")
data = read.csv("prc_hicp_mv12r_1_Data.csv")
data = data[data$GEO == salis,]
infliacija = data[,c(1,5)]
setwd('..')
setwd("Nedarbas")
data = read.csv("ei_lmhu_m_1_Data.csv")
data = data[data$GEO == salis,]
nedarbas = data[,c(1,6)]
setwd('..')
istraukimas3 <- function(salis,folderio_pav,failo_pav,indikatorius){
setwd(folderio_pav)
data=read.csv(failo_pav)
data = data[data$S_ADJ=="Unadjusted data (i.e. neither seasonally adjusted nor calendar adjusted data)",]
data = data[data$GEO == salis,]
data = data[data$INDIC == indikatorius,]
setwd('..')
return(data[,c(1,6)])
}
ndikatorius="Business activity (sales) development over the past 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
verslo_aktyvumas=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)              #blogai
indikatorius="Volume of stocks currently hold"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
turimos_akcijos=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)             #blogai
indikatorius="Expectations of the number of orders placed with suppliers over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
uzsakymu_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)              #blogai
indikatorius="Employment expectations over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
darbolygio_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)                 #blogai
indikatorius="Business activity (sales) development over the past 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
verslo_aktyvumas=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)              #blogai
indikatorius="Volume of stocks currently hold"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
turimos_akcijos=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)             #blogai
indikatorius="Expectations of the number of orders placed with suppliers over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
uzsakymu_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)              #blogai
indikatorius="Employment expectations over the next 3 months"
folderio_pav="Mazmenine prekyba"
failo_pav="ei_bsrt_m_r2_1_Data.csv"
darbolygio_lukesciai=istraukimas3(salis,folderio_pav,failo_pav,indikatorius)                 #blogai
View(verslo_aktyvumas)
View(turimos_akcijos)
View(uzsakymu_lukesciai)
View(darbolygio_lukesciai)
class(apyvarta)
ilgalaikio_vartojimo_prekės
apyvarta
statybu_pasitikejimas
paslaugu_pasitikejimas
vartotoju_pasitikejimas
mazmeninis_pasitikejimas
pramones_pasitikejimas
verslo_aktyvumas
turimos_akcijos
uzsakymu_lukesciai
darbolygio_lukesciai
nedarbas
infliacija
ilgalaikio_vartojimo_prekės
as.Date(ilgalaikio_vartojimo_prekės[,1],"%Y/%m")
as.Date(ilgalaikio_vartojimo_prekės[,1],"%YM%m")
as.Date(ilgalaikio_vartojimo_prekės[,1],"%YM%m")
as.Date(ilgalaikio_vartojimo_prekės[,1],"%Y%m")
ilgalaikio_vartojimo_prekės
?gsub
gsub("M", "/", ilgalaikio_vartojimo_prekės)
gsub("M", "/", ilgalaikio_vartojimo_prekės)
gsub("M", "/", ilgalaikio_vartojimo_prekės[,1])
ilgalaikio_vartojimo_prekės
ilgalaikio_vartojimo_prekės
gsub("M", "/", ilgalaikio_vartojimo_prekės[,1])
ilgalaikio_vartojimo_prekės[,1] %>% gsub("M", "/", ilgalaikio_vartojimo_prekės[,1])
ilgalaikio_vartojimo_prekės[,1] %>% gsub("M", "/", )
ilgalaikio_vartojimo_prekės[,1] %>% gsub("M", "/")
ilgalaikio_vartojimo_prekės[,1] %>% gsub("M","/")
ilgalaikio_vartojimo_prekės[,1] %>% gsub("M","/")
as.Date(ilgalaikio_vartojimo_prekės[,1],"%Y%.%m")
as.Date(ilgalaikio_vartojimo_prekės[,1],"%Y%.%m")
ilgalaikio_vartojimo_prekės[,1]
parse_date(ilgalaikio_vartojimo_prekės[,1],"%Y%.%m")
?parse_date
install.packages("parsedate")
library(parsedate)
parse_date(ilgalaikio_vartojimo_prekės[,1],"%Y%.%m")
parse_date(ilgalaikio_vartojimo_prekės[,1],"%Y%.%m")
class(ilgalaikio_vartojimo_prekės[,1])
as.Date(ilgalaikio_vartojimo_prekės[,1],"%Y%.%m")
as.Date(ilgalaikio_vartojimo_prekės[,1],"%Y%m")
library(zoo)
as.yearmon(ilgalaikio_vartojimo_prekės[,1], format="X%Y.%m")
as.yearmon(ilgalaikio_vartojimo_prekės[,1], format="%YM%m")
as.Date(as.yearmon(ilgalaikio_vartojimo_prekės[,1], format="%YM%m"),"%Y%m")
?as.Date
as.Date(as.yearmon(ilgalaikio_vartojimo_prekės[,1], format="%YM%m"),)
ilgalaikio_vartojimo_prekės[,1]
as.Date(as.yearmon(ilgalaikio_vartojimo_prekės[,1], format="%YM%m"),)

breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
panel.cor2 <- function(x, y, digits=2, cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
test <- cor.test(x,y)
Signif <- ifelse(round(test$p.value,3)<0.001,"p<0.001",paste("p=",round(test$p.value,3)))
text(0.5, 0.25, paste("r=",txt))
text(.5, .75, Signif)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor,...)    #ši funkcija reikalinga grafikų lentelei
#išbrėžti (koreliacijos koeficiento radimui)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = 3)
}
>>>>>>> origin/master
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
<<<<<<< HEAD
data2[,c("OMX","SP350","SP500","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kk","mp","ip")]*100
data2$euribor=((data2$euribor+1)^(1/12)-1)*12                    #reiketu gal menesio?
data3=data.frame(diff(as.matrix(data2)))
data3$euribor=data2$euribor[-1]
names(data3)[names(data3) == 'euribor'] <- 'palukanos'
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
#tsdisplay(data3$infliacija)
infliacija=diff(data3$infliacija)
data3=data3[-1,]
data3$infliacija=infliacija
```
```{r, message=FALSE, echo=FALSE}
Data = rownames(data3)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
```
<br>
Akcijų indeksų mėnesiniai procentiniai pokyčiai:
```{r, message=FALSE, echo=FALSE}
=======
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kursas","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
Data = rownames(data3)
Data=as.yearmon(Data, "%YM%m")
data3=cbind.data.frame(Data, data3)
>>>>>>> origin/master
akc = melt(data3[,c("OMX","SP350","SP500","Data")], id=c("Data"))
ggplot(akc) + geom_line(aes(x=Data, y=value, colour=variable)) +
scale_colour_manual(values=c(1:4))+ylab("% pokytis")+
guides(col=guide_legend(title="Kintamieji"))
<<<<<<< HEAD
```
* Tikėtina, jog S&P350 ir S&P500 indeksų svyravimai tūrėtų būti labai panašūs, taigi pažiūrėjus į grafiką galime matyti, jog jų kreivės juda panašiai, tai yra šie dydžiai stipriai koreliuoti.
* OMX Vilnius kreivės svyravimai panašūs, tačiau nevisai sutampa su S&P indeksų. Todėl galima manyti, jog šie dydžiai yra gana silpnai koreliuoti.
\newpage
Akcijų rinkų koreliacija:
```{r, message=FALSE, echo=FALSE}
pairs(data3[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
```
* S&P350 ir S&P500 indeksų koreliacija reikšminga ir jie stipriai koreliuoja. Europos ir JAV akcijų rinkų svyravimai yra glaudžiai susiję.
* Kaip ir teigta anksčiau OMX Vilnius koreliacija su S&P indeksais yra reikšminga, tačiau nėra didelė. Nesimato stiprios įtakos iš lyderiaujančių pasaulio rinkų.
\newpage
Kintamųjų koreliacija su OMX Vilnius. r - koreliacijos koeficientas, p - koreliacijos reiksmingumas:
```{r, message=FALSE, echo=FALSE}
pairs(data3[,c("OMX","infliacija","nedarbas","kursas")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
```
```{r, message=FALSE, echo=FALSE}
pairs(data3[,c("OMX","mhope","phope","vhope","pramhope","vp")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
```
* Kaip ir buvo tikėtasi tarp kintamųjų ir OMX Vilnius rasta nestipri koreliacija, tačiau reikšminga.
\newpage
# Modeliavimas
```{r, message=FALSE, echo=FALSE}
data3$OMX=data3$OMX-data3$palukanos
data3$SP350=data3$SP350-data3$palukanos
mod = lm(OMX ~ SP350 + kk + dll + nedarbas + infliacija + mhope + phope + pramhope + shope + ta + ul + vhope + vp + mp  + gkl + ip + kursas, data=data3)
mod = lm(OMX ~ SP350 + kk +lag(kk,1) + dll+ lag(dll,1) + nedarbas +lag(nedarbas,1)+ infliacija+lag(infliacija,1) + mhope +lag(mhope,1)+ phope +lag(phope,1)+ pramhope+lag(pramhope,1) + shope+lag(shope,1) + ta +lag(ta,1)+ ul +lag(ul,1)+ vhope + lag(vhope,1)+vp+lag(vp,1) + mp+lag(mp,1)  + gkl+lag(gkl,1) + ip +lag(ip,1)+ kursas+lag(kursas,1), data=data3)
mod = lm(OMX ~ SP350  + mp + gkl + ip + kursas, data=data3)
summary(mod)
data4 <- df[, -which(names(df) %in% c("name1", "name2", "name3"))]
summary(lm(formula = OMX ~ SP350 + nedarbas + infliacija + pramhope, data = data3))
stepAIC(mod)
summary(lm(formula = OMX ~ SP350 + nedarbas + infliacija + phope + pramhope +
ul, data = data3)) # uzsakymu lukesciai atrodo nelogiskas, matyt paslinktas
summary(lm(formula = OMX ~ SP350 + phope + pramhope + vhope, data = data3))
mod=lm(formula = OMX ~ SP350 + phope + pramhope + vhope, data = data3)
ncvTest(mod) #heteroskedastiskumas
summary(lm(formula = OMX ~ lag(euribor,15), data = data3))
mod = lm(OMX ~ SP350 + kk + dll + nedarbas + infliacija + mhope + phope + pramhope + shope + ta + ul + vhope + vp + mp + euribor + gkl + ip + kursas+lag(euribor,1)+lag(euribor,2)+lag(euribor,3)+lag(euribor,4)+lag(euribor,5)+lag(euribor,6)+lag(euribor,7)+lag(euribor,8)+lag(euribor,9), data=data3)
stepAIC(mod)
summary(lm(formula = OMX ~ SP350 + nedarbas  + phope + pramhope +
vhope  + lag(euribor, 1) + lag(euribor, 3) + lag(euribor,
6) , data = data3))
summary(lm(formula = OMX ~ SP350 + nedarbas  + phope + pramhope +
vhope  + lag(euribor, 1) , data = data3))
#kaip su zymejimu? OMX 2012M2 tai kiek paaugo per 2012M1 iki 2012M2? ar tai tas pats su kitais rodikliais? Rodikliai turetu buti su lagu?
summary(lm(formula = OMX ~ SP350 + nedarbas + phope + pramhope +
vhope  + lag(euribor, 1) , data = data3))
#OMX indeksas <5mlrd eur, jei maziau negu <5lrd $ galima skaityti kaip mazos kapitalizacijos Amerikos kompanija, dideles rizikos, del to mazesne koreliacija su rinkomis
#One is that small-cap stocks have a lower trading liquidity. For investors, this means enough shares at the right price may be unavailable when they wish to buy, or at times, it may be difficult to sell shares quickly at favorable prices.
#Another aspect is that, in comparison to large-cap companies, small-cap firms generally have less access to capital and, overall, not as many financial resources. This makes it difficult for smaller companies to obtain necessary financing to bridge gaps in cash flow, fund new market growth pursuits or undertake large capital expenditures. This problem can become more severe for small-cap companies during economic cycle lows.
#Read more: How do the risks of large cap stocks differ from the risks of small cap stocks? | Investopedia http://www.investopedia.com/ask/answers/032615/how-do-risks-large-cap-stocks-differ-risks-small-cap-stocks.asp#ixzz4OeTYhmLS
step(mod,direction="both",test="F")
mod2=lm(formula = OMX ~ SP350 + lag(infliacija, 1) +
lag(phope, 1) + pramhope + lag(vp, 1) + lag(mp, 1) , data = data3)
AIC(mod2)
summary(mod2)
mod=lm(formula = OMX ~ SP350 + pramhope + vhope, data = data3)
AIC(mod)
coeftest(mod,data=data3,df=inf,vcov=vcovHC(mod,type="HC4"))
plot(mod$res,type="l")
```
```{r}
mod_po_aic <- lm(formula = OMX ~ SP350 + nedarbas + infliacija + phope + pramhope + ul, data = data3)
```
```{r, message=FALSE, echo=FALSE}
=======
pairs(data3[,c("OMX","SP350","SP500")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
correlations <- cor(data3[,c(2:21)], use="pairwise", method="spearman")
mydf <- cbind(rownames(correlations), correlations)
mydf = mydf[,c(1,2)]
rownames(mydf) <- NULL
colnames(mydf) <- c("Kintamieji","OMX")
kable(mydf)
kable(round(mydf)
)
kable(round(mydf))
round(mydf$OMX)
pairs(data3[,c("OMX","infliacija","nedarbas","vp","mhope","phope","vhope","pramhope","kursas")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","infliacija","nedarbas","kursas")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
pairs(data3[,c("OMX","mhope","phope","vhope","pramhope","vp")],upper.panel=panel.smooth,diag.panel=panel.hist, lower.panel=panel.cor2)
mod = lm(OMX ~ SP350 + kk + dll + nedarbas + infliacija + mhope + phope + pramhope + shope + ta + ul + vhope + vp + mp + euribor + gkl + ip + kursas, data=data3)
stepAIC(mod)
stepAIC(mod)$Call
stepAIC(mod)
step_AIC <- stepAIC(mod)
a <- stepAIC(mod)
?stepAIC
a <- stepAIC(mod, direction = c("both"))
a <- stepAIC(mod)
data=read.csv("rawdata.csv")
data[ data == ":" ] = NA
data=data[complete.cases(data),]
rownames(data)<-NULL
data2=apply(data[,-1],2,as.numeric)
rownames(data2)=data[,1]
data2=data.frame(data2)
data2$nedarbas=data2$nedarbas/10
data2[,c("OMX","SP350","SP500","kk","mp","ip")] = apply(data2[,c("OMX","SP350","SP500","kk","mp","ip")],2,log)    #logaritmuojama indeksai, akcijų kainos, kursas
data2[,c("OMX","SP350","SP500","kk","mp","ip")]=data2[,c("OMX","SP350","SP500","kk","mp","ip")]*100
data2$euribor=data2$euribor/12
data3=data.frame(diff(as.matrix(data2)))
data3$gkl = data$gkl[-1]    #gamintoju kainu lygio nereik diferencijuot nes jau yra pokytis %
#tsdisplay(data3$infliacija)
p=apply(data3,2,function(i)adf.test(i,k=1)$p.value)
p=data.frame(p)
p[,2] = round(p[,2])
kable(p)
p
class(p)
class(p[,2])
class(p[,1])
p[,1] = round(p[,1])
kable(p)
?round
p[,1] = round(p[,1], digits = 2)
kable(p)
p=apply(data3,2,function(i)adf.test(i,k=1)$p.value)
p=data.frame(p)
p[,1] = round(p[,1], digits = 2)
kable(p)
mod_po_aic <- lm(formula = OMX ~ SP350 + nedarbas + infliacija + phope + pramhope + ul, data = data3)
summary(mod_po_aic)
kable(summary(mod_po_aic$coef))
summary(mod_po_aic)
kable(data.frame(summary(mod_po_aic)[4]))
Sys.setlocale(locale="en_US.UTF-8")
plot(data[,OMX], type="l",main="ąčęėįšųū90-ž")
Sys.setlocale(locale="en_LT.UTF-8")
Sys.setlocale(locale="en_LTH.UTF-8")
Sys.getlocale()
Sys.setlocale(locale="Lithuaninan_LT.UTF-8")
Sys.setlocale(locale="Lithuaninan_LT.UTF-8")
datafr=data.frame(summary(mod_po_aic)[4])
colnames(datafr)=c("beta koeficientai","standartinis nuokrypis","koeficientų t reikšmės","p reikšmė")
kable(datafr)
View(datafr)
View(datafr)
View(mydf)
View(datafr)
datafr=data.frame(summary(mod_po_aic)[4])
colnames(datafr)=c("beta koeficientai","standartinis nuokrypis","koeficientų t reikšmės","p reikšmė")
rownames(datafr)=c("beta nulinis","S&P350","nedarbas","infliacija","paslaugų pasitikėjimas", "pramonės pasitikėjimas", "užsakymų lūkesčiai")
kable(datafr)
summary(mod_po_aic)
View(datafr)
stepAIC(mod)
View(datafr)
stepAIC(mod)
>>>>>>> origin/master
datafr=data.frame(summary(mod_po_aic)[c(4,8)] %>%  lapply(round,2))
colnames(datafr)=c("beta koeficientai","standartinis nuokrypis","koeficientu t reikšmes","p reiksme", "R kvadratas")
rownames(datafr)=c("beta nulinis","S&P350","nedarbas","infliacija","paslaugu pasitikejimas", "pramones pasitikejimas", "uzsakymu lukesciai")
datafr[2:nrow(datafr),"R kvadratas"]="-"
kable(datafr)
<<<<<<< HEAD
```
* Sudarytas modelis iš visų kintamųjų, atliktas stepAIC.  Didelė dalis makroekonominių duomenų buvo nereikšmingi, tačiau aptikome ir keletą reikšmingų kintamųjų. Modelis paaiškina apie 25% procentus OMX Vilnius indekso grąžos pokyčių.
\newpage
# Literatūra
1) „TESTS OF THE ARBITRAGE PRICING THEORY USING MACROECONOMIC VARIABLES IN THE RUSSIAN EQUITY MARKET“ - Mauri Paavola:
[link](http://www.doria.fi/bitstream/handle/10024/30869/TMP.objres.246.pdf)
2) „Introductory Econometrics for Finance“ - Chris Brooks
3) „Relationship between Macro – Economic Variables and Stock Market Performance of Colombo Stock Exchange“ - Prabath Suranga Morawakage:
[link](https://www.researchgate.net/profile/Prabath_Morawakage/publication/263659272_Relationship_between_Macro_-_Economic_Variables_and_Stock_Market_Performance_of_Colombo_Stock_Exchange/links/0f31753b8d1bfe46cb000000.pdf)
4) „Do macro-economic variables explain stock-market returns? Evidence using a semi-parametric approach“ - Sagarika Mishra:
[link](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1937914)
```{r}
names2=c("SP350","SP500","kk","dll","nedarbas","infliacija","mhope","phope","pramhope","shop","ta","ul","vhope","vp","mp","palukanos","gkl","ip","kursas")
Find_Max_CCF<- function(a,b)
{
d <- ccf(a, b, plot = FALSE)
d = d[1:19]
cor = d$acf[,,1]
lag = d$lag[,,1]
res = data.frame(cor,lag)
res_max = res[which.max(res$cor),]
return(res_max)
}
for (i in 3:length(data3[1,])){
ccfvalues <- Find_Max_CCF(data3$OMX,data3[,i])
if(i==3){lagdata=ccfvalues}
else{
lagdata=rbind(lagdata,ccfvalues)
}
}
rownames(lagdata)=names2
lagdata
vcovHC(mod_po_aic2)
## standard coefficient significance test
coeftest(mod_po_aic2)
## robust significance test, cluster by group
## (robust vs. serial correlation)
coeftest(mod_po_aic2, vcov=vcovHC)
ccfvalues <- ccf(data3$OMX,mod_po_aic2$residuals)
ccfvalues
res<-bptest(mod_po_aic2)
gen=function(pradzia,pirkti){
b=sample(pradzia:169,length(pirkti),replace=F)
return(sum(data3[b,"OMX"]))
}
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[1:i,c("OMX","SP350","infliacija","mhope","phope","ul","gkl","ip","kursas")])
a=predict(modelis_po_aic, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>5){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=data.frame()
for(i in 30:168){
lentele=rbind(lentele,validation(i))
}
betu_lentele=data.frame()
for(i in 1:88){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), na.action=na.omit,data = data3[i:(i+80),])
betu_lentele=rbind(betu_lentele,modelis_po_aic$coeff)
}
betu_lentele=cbind(betu_lentele,81:168)
colnames(betu_lentele)=c("intercept"," lag(SP350, 1)","lag(infliacija, 2)","lag(mhope, 3)","lag(phope, 12)", "lag(ul, 10)", "lag(gkl, 9)","lag(ip, 4)","lag(kursas, 2)", "paskutinis menesis(is viso 80 imtyje)")
View(betu_lentele)
betu_lentele=data.frame()
for(i in 1:88){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), na.action=na.omit,data = data3[i:(i+80),])
betu_lentele=rbind(betu_lentele,modelis_po_aic$coeff)
}
betu_lentele=cbind(betu_lentele,81:168)
colnames(betu_lentele)=c("intercept"," lag(SP350, 1)","lag(infliacija, 2)","lag(mhope, 3)","lag(phope, 12)", "lag(ul, 10)", "lag(gkl, 9)","lag(ip, 4)","lag(kursas, 2)", "paskutinis menesis(is viso 80 imtyje)")
betu_lentele=round(betu_lentele,3)
betu_lentele
View(betu_lentele)
View(betu_lentele)
apply(betu_lentele[,-length(betu_lentele)],2,sign)
zenklai=apply(betu_lentele[,-length(betu_lentele)],2,sign)
table(zenklai)
apply(zenklai[,-length(betu_lentele)],2,table)
a=apply(zenklai[,-length(betu_lentele)],2,table)
a
matrix(a)
betu_lentele=round(betu_lentele,3)
unlist(a)
b=unlist(a)
matrix(unlist(a))
a
matrix(unlist(a))
unlist(a)
data.frame(unlist(a))
kable(data.frame(unlist(a)))
betu_lentele=round(betu_lentele,3)
betu_lentele
kable(betu_lentele)
pirkti=numeric()
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[1:i,])
a=predict(modelis_po_aic, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>5){pirkti=append(pirkti,data3[i,"OMX"])}
}
validation(100)
validation(100)
pirkti=numeric()
gen=function(pradzia,pirkti){
b=sample(pradzia:169,length(pirkti),replace=F)
return(sum(data3[b,"OMX"]))
}
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[1:i,])
a=predict(modelis_po_aic, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>5){pirkti=append(pirkti,data3[i,"OMX"])}
}
}
}
pirkti=numeric()
gen=function(pradzia,pirkti){
b=sample(pradzia:169,length(pirkti),replace=F)
return(sum(data3[b,"OMX"]))
}
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[1:i,])
a=predict(modelis_po_aic, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>5){pirkti=append(pirkti,data3[i,"OMX"])}
}
}
validation(100)
install.pandoc()
if(!require(installr)) { install.packages("installr"); require(installr)}
install.pandoc()
install.pandoc()
if(!require(installr)) { install.packages("installr"); require(installr)}
install.pandoc()
if(!require(installr)) { install.packages("installr"); require(installr)}
install.pandoc()
setInternet2(TRUE)
install.pandoc()
setInternet2(TRUE)
install.pandoc()
setInternet2(TRUE)
if(!require(installr)) { install.packages("installr"); require(installr)}
setInternet2(TRUE)
install.pandoc()
setInternet2(TRUE)
install.pandoc()
install.pandoc(URL = "https://github.com/jgm/pandoc/releases", use_regex = TRUE, to_restart, ...)
install.pandoc(URL = "https://github.com/jgm/pandoc/releases", use_regex = TRUE, to_restart)
setInternet2(TRUE)
install.pandoc(URL = "https://github.com/jgm/pandoc/releases", use_regex = TRUE, to_restart)
modelis = lm(OMX ~ lag(SP350,1) + lag(kk,1) + lag(dll,1) + nedarbas + lag(infliacija,2) + lag(infliacija,3) + lag(infliacija,5) + lag(infliacija,7) + lag(infliacija,8) +lag(mhope,3) + lag(phope,12) + lag(pramhope,3) + lag(shope,4) + lag(ul,10) + lag(vhope,4) + lag(vp,0) + lag(mp,1) + lag(gkl,9) + lag(ip,0) + lag(ip,1) + lag(ip,4) + lag(kursas,2) , data=data3)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3)
(coeftest(modelis_po_aic, vcov=vcovHC))
coeftest(modelis_po_aic, vcov=vcovHC))
coeftest(modelis_po_aic, vcov=vcovHC)
=======
install.packages("sandwich")
ur.za(data3$infliacija)
install.packages("urca")
library(urca)
library(urca)
install.packages("urca")
library(urca)
ur.za(data3$infliacija)
a=ur.za(data3$infliacija)
summary(a)
a=ur.za(data$infliacija)
summary(a)
a=ur.za(data$OMX)
summary(a)
a=ur.za(data3$infliacija)
summary(a)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
>>>>>>> origin/master
library("quantmod")
library("forecast")
library("xts")
library("dplyr")
library("gridExtra")
library("dynlm")
library("ggplot2")
library("reshape2")
library("knitr")
library("tseries")
library("MASS")
library("car")
library("sandwich")
library("lmtest")
<<<<<<< HEAD
coeftest(modelis_po_aic, vcov=vcovHC)
coeftest(modelis_po_aic, vcov=vcovHC)
summary(modelis_po_aic)[8]
coeftest(modelis_po_aic, vcov=vcovHC)
coeftest(modelis_po_aic, vcov=vcovHC)
a=coeftest(modelis_po_aic, vcov=vcovHC)
str(a)
a[1:9]
a[10]
a[1,1]
coeftest(modelis_po_aic, vcov=vcovHC)
a[,]
coeftest(modelis_po_aic, vcov=vcovHC)
kable(coeftest(modelis_po_aic, vcov=vcovHC)[,])
summary(modelis_po_aic)[8]
summary(modelis_po_aic)[8]
kable(datafr)
kable(coeftest(modelis_po_aic, vcov=vcovHC)[,])
summary(modelis_po_aic)[8]
kable(data.frame(unlist(a)))
kable(data.frame(unlist(a)))
betu_lentele=data.frame()
for(i in 1:88){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), na.action=na.omit,data = data3[i:(i+80),])
betu_lentele=rbind(betu_lentele,modelis_po_aic$coeff)
}
betu_lentele=cbind(betu_lentele,81:168)
colnames(betu_lentele)=c("intercept"," lag(SP350, 1)","lag(infliacija, 2)","lag(mhope, 3)","lag(phope, 12)", "lag(ul, 10)", "lag(gkl, 9)","lag(ip, 4)","lag(kursas, 2)", "paskutinis menesis(is viso 80 imtyje)")
betu_lentele=round(betu_lentele,3)
kable(betu_lentele)
zenklai=apply(betu_lentele[,-length(betu_lentele)],2,sign)
a=apply(zenklai[,-length(betu_lentele)],2,table)
kable(data.frame(unlist(a)))
kable(betu_lentele)
betu_lentele=data.frame()
for(i in 1:128){
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), na.action=na.omit,data = data3[i:(i+40),])
betu_lentele=rbind(betu_lentele,modelis_po_aic$coeff)
}
betu_lentele=cbind(betu_lentele,41:168)
colnames(betu_lentele)=c("intercept"," lag(SP350, 1)","lag(infliacija, 2)","lag(mhope, 3)","lag(phope, 12)", "lag(ul, 10)", "lag(gkl, 9)","lag(ip, 4)","lag(kursas, 2)", "paskutinis menesis(is viso 80 imtyje)")
betu_lentele=round(betu_lentele,3)
kable(betu_lentele)
zenklai=apply(betu_lentele[,-length(betu_lentele)],2,sign)
a=apply(zenklai[,-length(betu_lentele)],2,table)
kable(data.frame(unlist(a)))
kable(betu_lentele)
=======
durbinWatsonTest(modelis_po_aic)
modelis_po_aic <- lm(formula = OMX ~ lag(SP350, 1) + lag(nedarbas, 5) + lag(infliacija, 4) +
lag(mhope, 3) + lag(phope, 12) + lag(pramhope, 3) + lag(ul,10) + lag(vhope, 4) + lag(mp, 1) + lag(gkl, 19) + lag(ip,4) + lag(kursas, 2), data = data3)
```
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
durbinWatsonTest(modelis_po_aic)
Box.test(modelis_po_aic$res, fitdf=0, type="Lj")
Box.test(modelis_po_aic$res, fitdf=0, type="Lj")
Box.test(modelis_po_aic$res, fitdf=0, type="Lj")
Box.test(modelis_po_aic$res, fitdf=0, type="Lj")
>>>>>>> origin/master

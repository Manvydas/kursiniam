lentele=rbind(lentele,validation(i))
}
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm( OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=validation(100)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele2
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm( OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=validation(100)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele2
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm( OMX~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(mhope, 3)+ lag(gkl, 9)+  lag(ip, 11)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele2=validation(100)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele2
lentele
lentele=validation(130)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele2=validation(130)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele2
lentele
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele2=validation(130)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele2
lentele
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350, 1) + lag(infliacija, 2) + lag(mhope, 3) + lag(phope,12) + lag(ul, 10) + lag(gkl, 9) + lag(ip, 4) + lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele2=validation(130)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele2
lentele
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=validation(130)
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX  ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=validation(130)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele2
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ SP350  + lag(phope,12)  + lag(ul,10)+lag(mhope, 3)+ lag(gkl, 9)+  lag(ip, 11)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=data.frame()
for(i in 30:168){
lentele=rbind(lentele,validation(i))
}
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ SP350  + lag(phope,12)  + lag(ul,10)+lag(mhope, 3)+ lag(gkl, 9)+  lag(ip, 11)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele2=validation(130)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele2
lentele
lentele
lentele2
gen=function(pradzia,pirkti){
b=sample(pradzia:169,length(pirkti),replace=F)
return(sum(data3[b,"OMX"]))
}
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
modkain=lm(OMX ~ SP350  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2),data=data3)
b=predict(modkain, data3[1:i,])
b=b[length(b)]
b= b-data3[i,"OMX"]
if(matrix(a)[1]>2 & matrix(b)[1]>0){pirkti=append(pirkti,i)}
if(matrix(a)[1]>5 & matrix(b)[1]<0){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=validation(80)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
validation2=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
modkain=lm(OMX ~ SP350  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2),data=data3)
b=predict(modkain, data3[1:i,])
b=b[length(b)]
b= b-data3[i,"OMX"]
if(matrix(a)[1]>2 & matrix(b)[1]>0){pirkti=append(pirkti,i)}
if(matrix(a)[1]>5 & matrix(b)[1]<0){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(100000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=validation(80)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele2=validation2(80)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele2
lentele=validation(130)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele2=validation2(130)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele
lentele2
lentele=validation(80)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele2=validation2(80)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele
lentele2
lentele=validation(140)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele2=validation2(140)
lentele2[c(1:5)]=lentele2[c(5,2,3,1,4)]
lentele
lentele2
validation=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
if(matrix(a)[1]>2){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(10000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
validation2=function(pradzia){
pirkti=numeric()
for(i in pradzia:168){
modprog <- lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2), data = data3[1:i,])
a=predict(modprog, data3[1:i+1,])
a=a[length(a)]
modkain=lm(OMX ~ SP350  + lag(phope,12)  + lag(ul,10)+lag(gkl, 9)+lag(kursas,2),data=data3)
b=predict(modkain, data3[1:i,])
b=b[length(b)]
b= b-data3[i,"OMX"]
if(matrix(a)[1]>2 & matrix(b)[1]>0){pirkti=append(pirkti,i)}
if(matrix(a)[1]>5 & matrix(b)[1]<0){pirkti=append(pirkti,i)}
}
graza=sum(data3[pirkti,"OMX"])
random=replicate(10000,gen(pradzia,pirkti))
p=mean(random>graza)
vidurkis_random = mean(random)
if(p==0){p="nebuvo pirkimu"}
else{
p=append(p,graza)
p=append(p,vidurkis_random)
p=append(p,length(pirkti))
p=append(p,pradzia)
p=round(p,3)
}
return(p)
}
lentele=validation(140)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(140)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(140)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(140)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(140)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
lentele=validation(15)
lentele[c(1:5)]=lentele[c(5,2,3,1,4)]
lentele
progn=numeric()
for(i in 10:168){
modelis = lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+ lag(gkl, 9)+  lag(kursas,2),data=data3)
a=predict(modelis, data3[1:i+1,])
progn=append(progn,a[length(a)])
}
progn=as.numeric(progn)
a=cbind(progn,data3$OMX[11:length(data3$OMX)])
a
a=data.frame(a)
a
menesiai=c(1:159)
a=cbind(menesiai,a)
a
rownames(a)=NULL
colnames(a)=c("menesiai","progn", "reali")
akc = melt(a, id=c("menesiai"))
ggplot(akc) + geom_line(aes(x=menesiai, y=value, colour=variable)) +
scale_colour_manual(values=c(1:2))+ylab("% pokytis")+
guides(col=guide_legend(title="Kintamieji")) +
ggtitle("Prognozuojama ir reali akcijų grąža")+ geom_hline(yintercept = 5)+
geom_hline(yintercept = -5)
library("dplyr")
library("ggplot2")
progn=numeric()
for(i in 10:168){
modelis = lm(OMX ~ lag(SP350,1)  + lag(phope,12)  + lag(ul,10)+ lag(gkl, 9)+  lag(kursas,2),data=data3)
a=predict(modelis, data3[1:i+1,])
progn=append(progn,a[length(a)])
}
progn=as.numeric(progn)
a=cbind(progn,data3$OMX[11:length(data3$OMX)])
a=data.frame(a)
menesiai=c(1:159)
a=cbind(menesiai,a)
rownames(a)=NULL
colnames(a)=c("menesiai","progn", "reali")
akc = melt(a, id=c("menesiai"))
ggplot(akc) + geom_line(aes(x=menesiai, y=value, colour=variable)) +
scale_colour_manual(values=c(1:2))+ylab("% pokytis")+
guides(col=guide_legend(title="Kintamieji")) +
ggtitle("Prognozuojama ir reali akcijų grąža")+ geom_hline(yintercept = 5)+
geom_hline(yintercept = -5)
